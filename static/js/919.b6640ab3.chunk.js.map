{"version":3,"file":"static/js/919.b6640ab3.chunk.js","mappings":"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","sources":["components/pages/auth/signup/Faq.jsx","components/pages/auth/signup/AboutInfoForm.jsx","components/pages/auth/signup/BasicInfoForm.jsx","components/ui-components/slider/CMSlider.jsx","components/pages/auth/signup/MyGoalsForm.jsx","assets/images/last_step.svg","components/ui-components/form-components/CMCheckBox.jsx","components/pages/auth/signup/TermAndConditionForm.jsx","components/pages/auth/signup/QuestionStepper.jsx","pages/auth/signup/HealthInfo.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { map } from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getFaqData,\r\n  getFaqInfo,\r\n} from \"../../../../store/slice/auth/signup/faqSlice\";\r\nimport translate from \"../../../hooks/translate\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.grey[300]}`,\r\n  \"& .Mui-expanded\": {\r\n    backgroundColor: theme.palette.primary.lighter,\r\n  },\r\n  marginBottom: 8,\r\n  \"&\": {\r\n    borderRadius: 4,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => <MuiAccordionSummary {...props} />)(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.ContrastText,\r\n  })\r\n);\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  textAlign: \"start\",\r\n  backgroundColor: theme.palette.primary.lighter,\r\n}));\r\n\r\nconst Faq = () => {\r\n  const [expanded, setExpanded] = useState(\"panel0\");\r\n  const dispatch = useDispatch();\r\n\r\n  const store = useSelector(getFaqData);\r\n  const faqList = store.faqData;\r\n  const faqStep = store.faqStep;\r\n  const faqData = faqList.filter((data) => data.step === faqStep);\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getFaqInfo(\"CUSTOMER_SIGNUP\"));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {faqData && faqData.length > 0 && (\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          {translate(\"common_faq\")}\r\n        </Typography>\r\n      )}\r\n      {map(faqData, (item, index) => (\r\n        <Accordion\r\n          expanded={expanded === `panel${index}`}\r\n          onChange={handleChange(`panel${index}`)}\r\n          key={item._id}\r\n        >\r\n          <AccordionSummary\r\n            aria-controls=\"panel1d-content\"\r\n            id=\"panel1d-header\"\r\n            expandIcon={\r\n              expanded === `panel${index}` ? (\r\n                <IconButton sx={{ backgroundColor: \"primary.contrastText\" }}>\r\n                  <HorizontalRuleIcon />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton>\r\n                  <AddIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          >\r\n            <Typography variant=\"subtitle1\">\r\n              {translate(item?.titleMacro)}\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              {translate(item?.descriptionMacro)}\r\n            </Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n","import { Box, Grid, Stack } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\n\r\nimport { ErrorMessage, Formik } from \"formik\";\r\nimport { get, map } from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  getHealthInfo,\r\n  postHealthInfo\r\n} from \"../../../../store/slice/auth/signup/healthInfoSlice\";\r\nimport ComponentStyle from \"../../../../styles/ComponentStyle.module.css\";\r\nimport translate from \"../../../hooks/translate\";\r\nimport CMRadio from \"../../../ui-components/form-components/CMRadio\";\r\n\r\nconst AboutInfoForm = (props) => {\r\n  const { handleNext, handleBack, healthInfo } = props;\r\n  const dietPreferenceList = useSelector(\r\n    (state) => state.common.dietPreference\r\n  );\r\n  const workActiveLevelList = useSelector(\r\n    (state) => state.common.workActiveLevel\r\n  );\r\n  const leisureActiveLevelList = useSelector(\r\n    (state) => state.common.leisureActiveLevel\r\n  );\r\n  const dispatch = useDispatch();\r\n  const healthData = healthInfo;\r\n\r\n  const Schema = Yup.object().shape({\r\n    dietPreference: Yup.string().required(\r\n      translate(\"front_error_diet_preference_required\")\r\n    ),\r\n    eatingDisorder: Yup.string().required(\r\n      translate(\"front_error_eating_disorder_required\")\r\n    ),\r\n    workActiveLevel: Yup.string().required(\r\n      translate(\"front_error_work_active_level_required\")\r\n    ),\r\n    leisureActiveLevel: Yup.string().required(\r\n      translate(\"front_error_leisure_activity_level_required\")\r\n    ),\r\n  });\r\n\r\n  const handleAboutInfo = async (payload) => {\r\n    const res = await dispatch(postHealthInfo(payload))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          handleNext(2);\r\n          dispatch(getHealthInfo());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\" About err\", err);\r\n      });\r\n    return res;\r\n  };\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Formik\r\n          initialValues={{\r\n            dietPreference: get(healthData, \"dietPreference\", \"\"),\r\n            eatingDisorder: get(healthData, \"eatenDisorder\", true),\r\n            workActiveLevel: get(healthData, \"workActiveLevel\", \"\"),\r\n            leisureActiveLevel: get(healthData, \"leisureActiveLevel\", \"\"),\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={async (values) => {\r\n            const payload = {\r\n              ...values,\r\n              step: 2,\r\n            };\r\n            await handleAboutInfo(payload);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <form onSubmit={props.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl\r\n                    fullWidth\r\n                  >\r\n                    <FormLabel className=\"mb-1\">\r\n                      {translate(\"front_what_is_your_dietary_preference\")}?\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      name=\"dietPreference\"\r\n                      value={props.values.dietPreference}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"dietPreference\", value);\r\n                      }}\r\n                      row\r\n                      sx={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      {map(dietPreferenceList, (item, index) => (\r\n                        <FormControlLabel\r\n                          key={index}\r\n                          value={item?._id}\r\n                          control={<CMRadio varianttype=\"option\" />}\r\n                          label={translate(item?.macroName)}\r\n                          className={ComponentStyle.radio_option}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <FormHelperText error>\r\n                    <ErrorMessage name=\"dietPreference\" />\r\n                  </FormHelperText>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel className=\"mb-1\">\r\n                      {translate(\"front_i_have_recognized_an_eating_disorder\")}?\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      name=\"eatingDisorder\"\r\n                      value={props.values.eatingDisorder}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"eatingDisorder\", value);\r\n                      }}\r\n                      row\r\n                      sx={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      <FormControlLabel\r\n                        value={true}\r\n                        control={<CMRadio varianttype=\"option\" />}\r\n                        label={translate(\"common_type_yes\")}\r\n                        className={ComponentStyle.radio_option}\r\n                      />\r\n                      <FormControlLabel\r\n                        value={false}\r\n                        control={<CMRadio varianttype=\"option\" />}\r\n                        label={translate(\"common_type_no\")}\r\n                        className={ComponentStyle.radio_option}\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  {props.errors.eatingDisorder &&\r\n                    props.touched.eatingDisorder && (\r\n                      <FormHelperText error>\r\n                        <ErrorMessage name=\"eatingDisorder\" />\r\n                      </FormHelperText>\r\n                    )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel className=\"mb-1\">\r\n                      {translate(\"front_my_day_work_activity_level\")}\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      name=\"workActiveLevel\"\r\n                      value={props.values.workActiveLevel}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"workActiveLevel\", value);\r\n                      }}\r\n                      row\r\n                      sx={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      {map(workActiveLevelList, (item, index) => (\r\n                        <FormControlLabel\r\n                          key={index}\r\n                          value={item?._id}\r\n                          control={<CMRadio varianttype=\"option\" />}\r\n                          label={translate(item?.macroName)}\r\n                          className={ComponentStyle.radio_option}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  {props.errors.workActiveLevel &&\r\n                    props.touched.workActiveLevel && (\r\n                      <FormHelperText error>\r\n                        <ErrorMessage name=\"workActiveLevel\" />\r\n                      </FormHelperText>\r\n                    )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel className=\"mb-1\">\r\n                      {translate(\"front_my_leisure_time_activity_level\")}\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      name=\"leisureActiveLevel\"\r\n                      value={props.values.leisureActiveLevel}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"leisureActiveLevel\", value);\r\n                      }}\r\n                      row\r\n                      sx={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      {map(leisureActiveLevelList, (item, index) => (\r\n                        <FormControlLabel\r\n                          key={index}\r\n                          value={item?._id}\r\n                          control={<CMRadio varianttype=\"option\" />}\r\n                          label={translate(item?.macroName)}\r\n                          className={ComponentStyle.radio_option}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  {props.errors.leisureActiveLevel &&\r\n                    props.touched.leisureActiveLevel && (\r\n                      <FormHelperText error>\r\n                        <ErrorMessage name=\"leisureActiveLevel\" />\r\n                      </FormHelperText>\r\n                    )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={handleBack}\r\n                      disabled={props.isSubmitting}\r\n                    >\r\n                      {translate(\"common_btn_back\")}\r\n                    </Button>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <Button type=\"submit\" variant=\"contained\">\r\n                        {translate(\"common_next\")}\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"text\"\r\n                        onClick={() => {\r\n                          handleAboutInfo({ step: 2 });\r\n                        }}\r\n                      >\r\n                        {translate(\"common_skip\")}\r\n                      </Button>\r\n                    </Stack>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AboutInfoForm;\r\n","import Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { get } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  getHealthInfo,\r\n  postHealthInfo\r\n} from \"../../../../store/slice/auth/signup/healthInfoSlice\";\r\nimport translate from \"../../../hooks/translate\";\r\nimport { FemaleIcon, MaleIcon } from \"../../../icons\";\r\nimport CMRadio from \"../../../ui-components/form-components/CMRadio\";\r\n\r\nconst BasicInfoForm = (props) => {\r\n  const { handleNext, healthInfo } = props;\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const healthData = healthInfo;\r\n  console.log(\"health_data\", healthData);\r\n\r\n  const weightValueFirst = String(get(healthData, \"weight.value\", \"\")).split(\r\n    \".\"\r\n  )[0];\r\n  const weightValueSecond = String(get(healthData, \"weight.value\", \"\")).split(\r\n    \".\"\r\n  )[1];\r\n  const heightValueFirst = String(get(healthData, \"height.value\", \"\")).split(\r\n    \".\"\r\n  )[0];\r\n  const heightValueSecond = String(get(healthData, \"height.value\", \"\")).split(\r\n    \".\"\r\n  )[1];\r\n\r\n  const initialAge = moment().subtract(16, \"years\");\r\n  const month = get(healthData, \"age.month\");\r\n  const year = get(healthData, \"age.year\");\r\n  const getAge = moment(`01/${month}/${year}`);\r\n\r\n  const Schema = Yup.object().shape({\r\n    age: Yup.date().required(translate(\"front_error_age_is_required\")),\r\n    weightFirstInput: Yup.number().when(\"weightUnit\", (weightUnit) => {\r\n      if (weightUnit === \"kg\") {\r\n        return Yup.number()\r\n          .positive(translate(\"front_error_enter_positive_number\"))\r\n          .min(39.91, translate(\"front_error_enter_minimum_39.91_kg\"))\r\n          .max(254, translate(\"front_error_enter_maximum_254_kg\"))\r\n          .required(translate(\"front_error_weight_required\"));\r\n      }\r\n      if (weightUnit === \"lbs\") {\r\n        return Yup.number()\r\n          .positive(translate(\"front_error_enter_positive_number\"))\r\n          .min(88, translate(\"front_error_enter_minimum_88_lbs\"))\r\n          .max(560, translate(\"front_error_enter_maximum_560_lbs\"))\r\n          .required(translate(\"front_error_weight_required\"));\r\n      }\r\n      if (weightUnit === \"stLbs\") {\r\n        return Yup.number()\r\n          .positive(translate(\"front_error_enter_positive_number\"))\r\n          .min(6.285, translate(\"front_error_enter_minimum_6.285_st\"))\r\n          .max(40, translate(\"front_error_enter_maximum_40_st\"))\r\n          .required(translate(\"front_error_weight_required\"));\r\n      }\r\n    }),\r\n    weightSecondInput: Yup.number().when(\"weightUnit\", (weightUnit) => {\r\n      if (weightUnit === \"stLbs\") {\r\n        return Yup.number()\r\n          .positive(translate(\"front_error_enter_positive_number\"))\r\n          .min(88, translate(\"front_error_enter_minimum_88_lbs\"))\r\n          .max(560, translate(\"front_error_enter_maximum_560_lbs\"))\r\n          .required(translate(\"front_error_weight_required\"));\r\n      }\r\n    }),\r\n    heightFirstInput: Yup.number().when(\"heightUnit\", (heightUnit) => {\r\n      if (heightUnit === \"cm\") {\r\n        return Yup.number()\r\n          .positive(translate(\"front_error_enter_positive_number\"))\r\n          .min(121.92, translate(\"front_error_minimum_121.92_CM\"))\r\n          .max(213.36, translate(\"front_error_enter_maximum_213.36_cm\"))\r\n          .required(translate(\"front_error_height_is_required\"));\r\n      }\r\n      if (heightUnit === \"ftInc\") {\r\n        return Yup.number()\r\n          .positive(translate(\"front_error_enter_positive_number\"))\r\n          .min(4, translate(\"front_error_enter_minimum_4_foot\"))\r\n          .max(7, translate(\"front_error_enter_maximum_7_foot\"))\r\n          .required(translate(\"front_error_height_is_required\"));\r\n      }\r\n    }),\r\n    heightSecondInput: Yup.number().when(\r\n      [\"heightUnit\", \"heightFirstInput\"],\r\n      (heightUnit, heightFirstInput) => {\r\n        if (heightUnit === \"ftInc\") {\r\n          if (heightFirstInput >= 5 && heightFirstInput <= 6) {\r\n            return Yup.number()\r\n              .positive(translate(\"front_error_enter_positive_number\"))\r\n              .min(1, translate(\"front_error_enter_minimum_1_inch\"))\r\n              .max(11, translate(\"front_error_enter_maximum_11_inch\"));\r\n          }\r\n          if (heightFirstInput === 4) {\r\n            return Yup.number()\r\n              .positive(translate(\"front_error_enter_positive_number\"))\r\n              .min(3, translate(\"front_error_enter_minimum_3_inch\"))\r\n              .max(11, translate(\"front_error_enter_maximum_11_inch\"));\r\n          }\r\n          if (heightFirstInput === 7) {\r\n            return Yup.number()\r\n              .positive(translate(\"front_error_enter_positive_number\"))\r\n              .min(1, translate(\"front_error_enter_minimum_1_inch\"))\r\n              .max(10, translate(\"front_error_enter_maximum_10_inch\"));\r\n          }\r\n          return Yup.number().required(\r\n            translate(\"front_error_height_is_required\")\r\n          );\r\n        }\r\n      }\r\n    ),\r\n  });\r\n\r\n  const radioColor = {\r\n    \"& .MuiSvgIcon-root\": {\r\n      fontSize: 18,\r\n    },\r\n    \"&.Mui-checked\": {\r\n      color: theme.palette.secondary.main,\r\n      backgroundColor: theme.palette.secondary.lighter,\r\n    },\r\n  };\r\n\r\n  const handleBasicInfo = async (payload) => {\r\n    await dispatch(postHealthInfo(payload))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          handleNext(1);\r\n          dispatch(getHealthInfo());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\" basic err\", err);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Formik\r\n          initialValues={{\r\n            gender: get(healthData, \"gender\", \"M\"),\r\n            age: getAge,\r\n            weightFirstInput: weightValueFirst,\r\n            weightSecondInput: weightValueSecond,\r\n            weightUnit: get(healthData, \"weight.unit\", \"kg\"),\r\n            heightFirstInput: heightValueFirst,\r\n            heightSecondInput: heightValueSecond,\r\n            heightUnit: get(healthData, \"height.unit\", \"cm\"),\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={async (values) => {\r\n            const month = moment(values.age).format(\"MM\");\r\n            const year = moment(values.age).format(\"YYYY\");\r\n            const weightValue =\r\n              values.weightUnit === \"stLbs\"\r\n                ? values.weightFirstInput + \".\" + values.weightSecondInput\r\n                : parseFloat(values.weightFirstInput);\r\n            const heightValue =\r\n              values.heightUnit === \"ftInc\"\r\n                ? values.heightFirstInput + \".\" + values.heightSecondInput\r\n                : parseFloat(values.heightFirstInput);\r\n\r\n            const payload = {\r\n              gender: values.gender,\r\n              age: {\r\n                month: parseInt(month),\r\n                year: parseInt(year),\r\n              },\r\n              weight: {\r\n                value: parseFloat(weightValue),\r\n                unit: values.weightUnit,\r\n              },\r\n              height: {\r\n                value: parseFloat(heightValue),\r\n                unit: values.heightUnit,\r\n              },\r\n              step: 1,\r\n            };\r\n            await handleBasicInfo(payload);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <form onSubmit={props.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} className=\"mb-2\">\r\n                  <FormControl>\r\n                    <FormLabel\r\n                      id=\"demo-controlled-radio-buttons-group\"\r\n                      className=\"mb-1\"\r\n                    >\r\n                      {translate(\"front_your_gender\")}\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                      name=\"gender\"\r\n                      value={props.values.gender}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"gender\", value);\r\n                      }}\r\n                      row\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"M\"\r\n                        control={\r\n                          <Radio\r\n                            icon={<MaleIcon />}\r\n                            checkedIcon={<MaleIcon />}\r\n                            sx={radioColor}\r\n                          />\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"F\"\r\n                        control={\r\n                          <Radio\r\n                            icon={<FemaleIcon />}\r\n                            checkedIcon={<FemaleIcon />}\r\n                            sx={radioColor}\r\n                          />\r\n                        }\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <MobileDatePicker\r\n                    label={translate(\"front_your_age\")}\r\n                    name=\"age\"\r\n                    value={props.values.age}\r\n                    onChange={(newValue) => {\r\n                      const newDate = moment(newValue).format();\r\n                      props.setFieldValue(\"age\", newDate);\r\n                    }}\r\n                    onBlur={props.handleBlur}\r\n                    toolbarPlaceholder=\"\"\r\n                    closeOnSelect={false}\r\n                    toolbarTitle=\"Select Month & Year\"\r\n                    views={[\"month\", \"year\"]}\r\n                    maxDate={initialAge}\r\n                    disableFuture\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        fullWidth\r\n                        error={\r\n                          props.errors.age && props.touched.age ? true : false\r\n                        }\r\n                        helperText={\r\n                          props.errors.age && props.touched.age\r\n                            ? props.errors.age\r\n                            : null\r\n                        }\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel htmlFor=\"weight\" className=\"mb-2\">\r\n                      {translate(\"front_your_current_weight\")}\r\n                    </FormLabel>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <TextField\r\n                        label={\r\n                          props.values.weightUnit === \"kg\"\r\n                            ? translate(\"common_kg\")\r\n                            : props.values.weightUnit === \"lbs\"\r\n                            ? translate(\"common_lbs\")\r\n                            : translate(\"common_st\")\r\n                        }\r\n                        fullWidth\r\n                        type=\"number\"\r\n                        name=\"weightFirstInput\"\r\n                        value={props.values.weightFirstInput}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        error={\r\n                          props.errors.weightFirstInput &&\r\n                          props.touched.weightFirstInput\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          props.errors.weightFirstInput &&\r\n                          props.touched.weightFirstInput\r\n                            ? props.errors.weightFirstInput\r\n                            : null\r\n                        }\r\n                      />\r\n                      {props.values.weightUnit === \"stLbs\" && (\r\n                        <TextField\r\n                          label={translate(\"common_lbs\")}\r\n                          type=\"number\"\r\n                          fullWidth\r\n                          name=\"weightSecondInput\"\r\n                          value={props.values.weightSecondInput}\r\n                          onChange={props.handleChange}\r\n                          onBlur={props.handleBlur}\r\n                          inputProps={{\r\n                            inputMode: \"decimal\",\r\n                            maxLength: 3,\r\n                          }}\r\n                          error={\r\n                            props.errors.weightSecondInput &&\r\n                            props.touched.weightSecondInput\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            props.errors.weightSecondInput &&\r\n                            props.touched.weightSecondInput\r\n                              ? props.errors.weightSecondInput\r\n                              : null\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Stack>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <RadioGroup\r\n                      name=\"weightUnit\"\r\n                      value={props.values.weightUnit}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"weightUnit\", value);\r\n                      }}\r\n                      row\r\n                      sx={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"kg\"\r\n                        control={<CMRadio />}\r\n                        label={translate(\"common_kg\")}\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"lbs\"\r\n                        control={<CMRadio />}\r\n                        label={translate(\"common_lbs\")}\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"stLbs\"\r\n                        control={<CMRadio />}\r\n                        label={translate(\"common_st_&_lbs\")}\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel htmlFor=\"height\" className=\"mb-2\">\r\n                      {translate(\"front_your_current_height\")}\r\n                    </FormLabel>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <TextField\r\n                        id=\"height\"\r\n                        label={\r\n                          props.values.heightUnit === \"cm\"\r\n                            ? translate(\"common_cm\")\r\n                            : translate(\"common_ft\")\r\n                        }\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        name=\"heightFirstInput\"\r\n                        value={props.values.heightFirstInput}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        error={\r\n                          props.errors.heightFirstInput &&\r\n                          props.touched.heightFirstInput\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          props.errors.heightFirstInput &&\r\n                          props.touched.heightFirstInput\r\n                            ? props.errors.heightFirstInput\r\n                            : null\r\n                        }\r\n                      />\r\n                      {props.values.heightUnit === \"ftInc\" && (\r\n                        <TextField\r\n                          label={translate(\"common_inch\")}\r\n                          type=\"number\"\r\n                          name=\"heightSecondInput\"\r\n                          value={props.values.heightSecondInput}\r\n                          onChange={props.handleChange}\r\n                          onBlur={props.handleBlur}\r\n                          fullWidth\r\n                          error={\r\n                            props.errors.heightSecondInput &&\r\n                            props.touched.heightSecondInput\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            props.errors.heightSecondInput &&\r\n                            props.touched.heightSecondInput\r\n                              ? props.errors.heightSecondInput\r\n                              : null\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Stack>\r\n                  </FormControl>\r\n                  <FormControl>\r\n                    <RadioGroup\r\n                      name=\"heightUnit\"\r\n                      value={props.values.heightUnit}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"heightUnit\", value);\r\n                      }}\r\n                      row\r\n                      sx={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"cm\"\r\n                        control={<CMRadio />}\r\n                        label={translate(\"common_cm\")}\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"ftInc\"\r\n                        control={<CMRadio />}\r\n                        label={translate(\"common_ft_&_inch\")}\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" spacing={2} justifyContent=\"end\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      disabled={props.isSubmitting}\r\n                    >\r\n                      {translate(\"common_next\")}\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"text\"\r\n                      onClick={() => {\r\n                        handleBasicInfo({ step: 1 });\r\n                      }}\r\n                    >\r\n                      {translate(\"common_skip\")}\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfoForm;\r\n","import React from \"react\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { alpha, styled } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CMSlider = styled(Slider)(({ other, theme }) => ({\r\n  \"& .MuiSlider-valueLabel\": {\r\n    lineHeight: 1.2,\r\n    fontSize: 12,\r\n    padding: 0,\r\n    width: 60,\r\n    height: 25,\r\n    borderRadius: \"4px\",\r\n    backgroundColor: alpha(theme.palette[other.color].light, 1),\r\n    color: theme.palette[other.color].main\r\n  }\r\n}));\r\n\r\nconst CustomSlider = (props) => {\r\n  const { color, sx, ...rest } = props;\r\n  return (\r\n    <>\r\n      <CMSlider\r\n        valueLabelDisplay=\"auto\"\r\n        color={color}\r\n        sx={{ ...sx }}\r\n        other={props}\r\n        {...rest}\r\n      />\r\n    </>\r\n  );\r\n};\r\nCustomSlider.propTypes = {\r\n  color: PropTypes.string.isRequired\r\n};\r\nexport default CustomSlider;\r\n","import { useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport { ErrorMessage, Formik } from \"formik\";\r\nimport { get, map } from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  getHealthData,\r\n  getHealthInfo,\r\n  postHealthInfo,\r\n} from \"../../../../store/slice/auth/signup/healthInfoSlice\";\r\nimport ComponentStyle from \"../../../../styles/ComponentStyle.module.css\";\r\nimport translate from \"../../../hooks/translate\";\r\nimport CMRadio from \"../../../ui-components/form-components/CMRadio\";\r\nimport CMSlider from \"../../../ui-components/slider/CMSlider\";\r\n\r\nconst MyGoalsForm = (props) => {\r\n  const { handleNext, handleBack } = props;\r\n  const dispatch = useDispatch();\r\n  const goalTypeList = useSelector((state) => state.common.goalType);\r\n  // console.log(goalTypeList);\r\n\r\n  const healthData = useSelector(getHealthData);\r\n  // console.log(\"healthData =======\", healthData);\r\n\r\n  const totalWeight = get(healthData, \"weight.value\", 58);\r\n  const weightUnit = get(healthData, \"weight.unit\", \"kg\");\r\n\r\n  const calculatePercent = (percentToGet, total) => {\r\n    return parseFloat(((percentToGet / 100) * total).toFixed(2));\r\n  };\r\n\r\n  const initialWeight = calculatePercent(5, totalWeight);\r\n\r\n  const [goalWeight, setGoalWeight] = useState(\r\n    parseInt(\r\n      (\r\n        (get(healthData, \"goalWeight.value\", initialWeight) * 100) /\r\n        totalWeight\r\n      ).toFixed(2)\r\n    )\r\n  );\r\n\r\n  const marks = [\r\n    {\r\n      value: 5,\r\n      label: \"5%\",\r\n    },\r\n    {\r\n      value: 10,\r\n      label: \"10%\",\r\n    },\r\n    {\r\n      value: 15,\r\n      label: \"15%\",\r\n    },\r\n    {\r\n      value: 20,\r\n      label: \"20%\",\r\n    },\r\n    {\r\n      value: 25,\r\n      label: \"25%\",\r\n    },\r\n  ];\r\n\r\n  const perWeek = {\r\n    kg: {\r\n      min: 0.1,\r\n      max: 1,\r\n    },\r\n    lbs: {\r\n      min: 0.22,\r\n      max: 2.2,\r\n    },\r\n    stLbs: {\r\n      min: 0.02,\r\n      max: 0.2,\r\n    },\r\n  };\r\n\r\n  const [perWeekGoalWeight, setPerWeekGoalWeight] = useState(\r\n    get(healthData, \"perWeekGoalWeight.value\", perWeek[weightUnit].min)\r\n  );\r\n\r\n  const valuetext = (value) => {\r\n    return `${calculatePercent(value, totalWeight)} ${weightUnit}`;\r\n  };\r\n\r\n  const valuetext1 = (value) => {\r\n    return `${value} ${weightUnit}`;\r\n  };\r\n  const handleSliderChange = (event, newValue) => {\r\n    setPerWeekGoalWeight(newValue);\r\n  };\r\n  const handleGoalWeight = (event, newValue) => {\r\n    setGoalWeight(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setPerWeekGoalWeight(\r\n      event.target.value === \"\" ? \"\" : Number(event.target.value)\r\n    );\r\n  };\r\n\r\n  const Schema = Yup.object().shape({\r\n    overallGoal: Yup.string().required(\r\n      translate(\"common_error_goal_type_required\")\r\n    ),\r\n  });\r\n\r\n  const handleMyGoalWeight = async (payload) => {\r\n    const res = await dispatch(postHealthInfo(payload))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          handleNext(3);\r\n          dispatch(getHealthInfo());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\" basic err\", err);\r\n      });\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Formik\r\n          initialValues={{\r\n            overallGoal: get(healthData, \"overallGoal\"),\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={(values) => {\r\n            const payload = {\r\n              overallGoal: values.overallGoal,\r\n              goalWeight: {\r\n                value: calculatePercent(goalWeight, totalWeight),\r\n                unit: weightUnit,\r\n              },\r\n              perWeekGoalWeight: {\r\n                value: perWeekGoalWeight,\r\n                unit: weightUnit,\r\n              },\r\n            };\r\n            handleMyGoalWeight(payload);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <form onSubmit={props.handleSubmit}>\r\n              {/* {console.log(\"props\", props)} */}\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel className=\"mb-1\">\r\n                      {translate(\"front_my_overall_goal\")}\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      name=\"overallGoal\"\r\n                      value={props.values.overallGoal}\r\n                      onChange={(e, value) => {\r\n                        props.setFieldValue(\"overallGoal\", value);\r\n                      }}\r\n                      row\r\n                      sx={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                    >\r\n                      {map(goalTypeList, (item, index) => (\r\n                        <FormControlLabel\r\n                          key={index}\r\n                          value={item?._id}\r\n                          control={<CMRadio varianttype=\"option\" />}\r\n                          label={translate(item?.macroName)}\r\n                          className={ComponentStyle.radio_option}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                    <FormHelperText error>\r\n                      <ErrorMessage name=\"overallGoal\" />\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel className=\"mb-1\">\r\n                      {translate(\"front_my_goal_weight\")}\r\n                    </FormLabel>\r\n                    <CMSlider\r\n                      name=\"goalWeight\"\r\n                      value={goalWeight}\r\n                      getAriaValueText={valuetext}\r\n                      valueLabelFormat={valuetext}\r\n                      valueLabelDisplay=\"auto\"\r\n                      marks={marks}\r\n                      step={5}\r\n                      min={5}\r\n                      max={25}\r\n                      color=\"secondary\"\r\n                      onChange={handleGoalWeight}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormLabel className=\"mb-1\" sx={{ display: \"block\" }}>\r\n                    {translate(\"front_per_week_of_weight_gain_loss\")}\r\n                  </FormLabel>\r\n                  <TextField\r\n                    label=\"\"\r\n                    variant=\"outlined\"\r\n                    name=\"weight\"\r\n                    value={`${perWeekGoalWeight} ${weightUnit}`}\r\n                    onChange={handleInputChange}\r\n                    inputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    sx={{ maxWidth: 80 }}\r\n                    error={\r\n                      props.errors.weight && props.touched.weight ? true : false\r\n                    }\r\n                    helperText={\r\n                      props.errors.weight && props.touched.weight\r\n                        ? props.errors.weight\r\n                        : null\r\n                    }\r\n                  />\r\n                  <CMSlider\r\n                    valueLabelDisplay=\"auto\"\r\n                    getAriaValueText={valuetext1}\r\n                    valueLabelFormat={valuetext1}\r\n                    step={perWeek[weightUnit].min}\r\n                    min={perWeek[weightUnit].min}\r\n                    max={perWeek[weightUnit].max}\r\n                    value={\r\n                      typeof perWeekGoalWeight === \"number\"\r\n                        ? perWeekGoalWeight\r\n                        : 0\r\n                    }\r\n                    onChange={handleSliderChange}\r\n                    color=\"secondary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={handleBack}\r\n                    >\r\n                      {translate(\"common_btn_back\")}\r\n                    </Button>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        disabled={props.isSubmitting}\r\n                      >\r\n                        {translate(\"common_next\")}\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"text\"\r\n                        onClick={() => {\r\n                          handleMyGoalWeight({ step: 3 });\r\n                        }}\r\n                      >\r\n                        {translate(\"common_skip\")}\r\n                      </Button>\r\n                    </Stack>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyGoalsForm;\r\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLastStep(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 344,\n    height: 205,\n    viewBox: \"0 0 344 205\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.471 37L243 24H227L235.471 37Z\",\n    fill: \"#F3F9F8\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263 4H207C205.895 4 205 4.89543 205 6V22C205 23.1046 205.895 24 207 24H263C264.105 24 265 23.1046 265 22V6C265 4.89543 264.105 4 263 4Z\",\n    fill: \"#F3F9F8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M210.473 17.9999C210.297 17.9999 210.157 17.9479 210.053 17.8439C209.957 17.7399 209.909 17.5999 209.909 17.4239V10.0559C209.909 9.87188 209.957 9.73188 210.053 9.63588C210.149 9.53988 210.285 9.49188 210.461 9.49188C210.645 9.49188 210.785 9.53988 210.881 9.63588C210.977 9.73188 211.025 9.87188 211.025 10.0559V17.0399H214.841C215.009 17.0399 215.133 17.0799 215.213 17.1599C215.301 17.2399 215.345 17.3559 215.345 17.5079C215.345 17.6679 215.301 17.7919 215.213 17.8799C215.133 17.9599 215.009 17.9999 214.841 17.9999H210.473ZM218.199 18.1079C217.799 18.1079 217.435 18.0279 217.107 17.8679C216.787 17.7079 216.535 17.4919 216.351 17.2199C216.175 16.9479 216.087 16.6439 216.087 16.3079C216.087 15.8759 216.195 15.5359 216.411 15.2879C216.627 15.0399 216.991 14.8639 217.503 14.7599C218.015 14.6479 218.703 14.5919 219.567 14.5919H220.131V15.2879H219.591C218.975 15.2879 218.487 15.3159 218.127 15.3719C217.775 15.4279 217.527 15.5279 217.383 15.6719C217.239 15.8079 217.167 15.9999 217.167 16.2479C217.167 16.5599 217.275 16.8159 217.491 17.0159C217.715 17.2159 218.019 17.3159 218.403 17.3159C218.707 17.3159 218.975 17.2439 219.207 17.0999C219.439 16.9479 219.623 16.7479 219.759 16.4999C219.895 16.2439 219.963 15.9519 219.963 15.6239V14.2439C219.963 13.7719 219.867 13.4319 219.675 13.2239C219.483 13.0079 219.159 12.8999 218.703 12.8999C218.439 12.8999 218.167 12.9359 217.887 13.0079C217.607 13.0799 217.315 13.1919 217.011 13.3439C216.891 13.3999 216.787 13.4199 216.699 13.4039C216.611 13.3799 216.539 13.3319 216.483 13.2599C216.435 13.1799 216.407 13.0959 216.399 13.0079C216.399 12.9119 216.419 12.8199 216.459 12.7319C216.507 12.6439 216.587 12.5799 216.699 12.5399C217.051 12.3639 217.399 12.2399 217.743 12.1679C218.095 12.0879 218.423 12.0479 218.727 12.0479C219.247 12.0479 219.675 12.1319 220.011 12.2999C220.347 12.4599 220.599 12.7119 220.767 13.0559C220.935 13.3919 221.019 13.8239 221.019 14.3519V17.5199C221.019 17.7039 220.975 17.8439 220.887 17.9399C220.799 18.0359 220.671 18.0839 220.503 18.0839C220.343 18.0839 220.215 18.0359 220.119 17.9399C220.031 17.8439 219.987 17.7039 219.987 17.5199V16.6679H220.095C220.031 16.9639 219.911 17.2199 219.735 17.4359C219.559 17.6519 219.339 17.8199 219.075 17.9399C218.819 18.0519 218.527 18.1079 218.199 18.1079ZM224.753 18.1079C224.393 18.1079 224.029 18.0679 223.661 17.9879C223.301 17.8999 222.961 17.7519 222.641 17.5439C222.553 17.4879 222.489 17.4199 222.449 17.3399C222.417 17.2519 222.405 17.1679 222.413 17.0879C222.429 16.9999 222.465 16.9239 222.521 16.8599C222.577 16.7959 222.645 16.7599 222.725 16.7519C222.813 16.7359 222.905 16.7559 223.001 16.8119C223.313 16.9879 223.613 17.1119 223.901 17.1839C224.197 17.2559 224.489 17.2919 224.777 17.2919C225.217 17.2919 225.549 17.2119 225.773 17.0519C225.997 16.8919 226.109 16.6799 226.109 16.4159C226.109 16.1919 226.033 16.0199 225.881 15.8999C225.737 15.7719 225.509 15.6759 225.197 15.6119L224.081 15.3839C223.585 15.2719 223.209 15.0879 222.953 14.8319C222.705 14.5679 222.581 14.2319 222.581 13.8239C222.581 13.4639 222.677 13.1519 222.869 12.8879C223.069 12.6159 223.345 12.4079 223.697 12.2639C224.049 12.1199 224.453 12.0479 224.909 12.0479C225.261 12.0479 225.593 12.0959 225.905 12.1919C226.225 12.2799 226.513 12.4159 226.769 12.5999C226.865 12.6559 226.925 12.7279 226.949 12.8159C226.981 12.8959 226.985 12.9799 226.961 13.0679C226.945 13.1479 226.909 13.2159 226.853 13.2719C226.797 13.3279 226.725 13.3639 226.637 13.3799C226.549 13.3879 226.453 13.3639 226.349 13.3079C226.117 13.1479 225.877 13.0359 225.629 12.9719C225.389 12.8999 225.149 12.8639 224.909 12.8639C224.477 12.8639 224.149 12.9479 223.925 13.1159C223.709 13.2839 223.601 13.5039 223.601 13.7759C223.601 13.9839 223.665 14.1559 223.793 14.2919C223.929 14.4279 224.141 14.5279 224.429 14.5919L225.545 14.8199C226.065 14.9319 226.457 15.1119 226.721 15.3599C226.985 15.5999 227.117 15.9279 227.117 16.3439C227.117 16.8879 226.901 17.3199 226.469 17.6399C226.045 17.9519 225.473 18.1079 224.753 18.1079ZM230.904 18.1079C230.432 18.1079 230.036 18.0239 229.716 17.8559C229.404 17.6879 229.168 17.4439 229.008 17.1239C228.856 16.8039 228.78 16.4119 228.78 15.9479V12.9959H228.012C227.868 12.9959 227.756 12.9599 227.676 12.8879C227.596 12.8079 227.556 12.7039 227.556 12.5759C227.556 12.4399 227.596 12.3359 227.676 12.2639C227.756 12.1919 227.868 12.1559 228.012 12.1559H228.78V10.8479C228.78 10.6639 228.828 10.5279 228.924 10.4399C229.02 10.3439 229.156 10.2959 229.332 10.2959C229.508 10.2959 229.64 10.3439 229.728 10.4399C229.824 10.5279 229.872 10.6639 229.872 10.8479V12.1559H231.324C231.476 12.1559 231.592 12.1919 231.672 12.2639C231.752 12.3359 231.792 12.4399 231.792 12.5759C231.792 12.7039 231.752 12.8079 231.672 12.8879C231.592 12.9599 231.476 12.9959 231.324 12.9959H229.872V15.8519C229.872 16.2919 229.964 16.6239 230.148 16.8479C230.332 17.0719 230.636 17.1839 231.06 17.1839C231.212 17.1839 231.34 17.1719 231.444 17.1479C231.548 17.1159 231.64 17.0999 231.72 17.0999C231.792 17.0919 231.852 17.1159 231.9 17.1719C231.956 17.2279 231.984 17.3319 231.984 17.4839C231.984 17.5959 231.964 17.6999 231.924 17.7959C231.892 17.8839 231.824 17.9439 231.72 17.9759C231.624 18.0079 231.496 18.0359 231.336 18.0599C231.176 18.0919 231.032 18.1079 230.904 18.1079ZM238.825 18.1079C238.449 18.1079 238.085 18.0759 237.733 18.0119C237.381 17.9559 237.049 17.8679 236.737 17.7479C236.425 17.6279 236.145 17.4799 235.897 17.3039C235.793 17.2319 235.717 17.1439 235.669 17.0399C235.629 16.9359 235.617 16.8359 235.633 16.7399C235.657 16.6359 235.701 16.5479 235.765 16.4759C235.837 16.4039 235.921 16.3599 236.017 16.3439C236.113 16.3279 236.217 16.3599 236.329 16.4399C236.697 16.6879 237.081 16.8679 237.481 16.9799C237.889 17.0919 238.337 17.1479 238.825 17.1479C239.529 17.1479 240.045 17.0199 240.373 16.7639C240.709 16.5079 240.877 16.1719 240.877 15.7559C240.877 15.4119 240.757 15.1439 240.517 14.9519C240.277 14.7519 239.873 14.5959 239.305 14.4839L238.033 14.2199C237.281 14.0599 236.717 13.7959 236.341 13.4279C235.973 13.0599 235.789 12.5679 235.789 11.9519C235.789 11.5759 235.865 11.2359 236.017 10.9319C236.169 10.6199 236.385 10.3519 236.665 10.1279C236.945 9.90388 237.273 9.73189 237.649 9.61189C238.033 9.49189 238.457 9.43188 238.921 9.43188C239.417 9.43188 239.881 9.49988 240.313 9.63588C240.753 9.77188 241.149 9.97188 241.501 10.2359C241.597 10.3079 241.661 10.3959 241.693 10.4999C241.725 10.5959 241.729 10.6919 241.705 10.7879C241.689 10.8839 241.645 10.9639 241.573 11.0279C241.509 11.0919 241.425 11.1279 241.321 11.1359C241.225 11.1439 241.117 11.1079 240.997 11.0279C240.677 10.8039 240.349 10.6439 240.013 10.5479C239.677 10.4439 239.309 10.3919 238.909 10.3919C238.501 10.3919 238.145 10.4559 237.841 10.5839C237.545 10.7119 237.313 10.8919 237.145 11.1239C236.985 11.3479 236.905 11.6119 236.905 11.9159C236.905 12.2839 237.017 12.5719 237.241 12.7799C237.465 12.9879 237.841 13.1479 238.369 13.2599L239.629 13.5119C240.429 13.6799 241.021 13.9399 241.405 14.2919C241.797 14.6359 241.993 15.0999 241.993 15.6839C241.993 16.0519 241.917 16.3839 241.765 16.6799C241.621 16.9759 241.413 17.2319 241.141 17.4479C240.869 17.6559 240.537 17.8199 240.145 17.9399C239.753 18.0519 239.313 18.1079 238.825 18.1079ZM245.716 18.1079C245.244 18.1079 244.848 18.0239 244.528 17.8559C244.216 17.6879 243.98 17.4439 243.82 17.1239C243.668 16.8039 243.592 16.4119 243.592 15.9479V12.9959H242.824C242.68 12.9959 242.568 12.9599 242.488 12.8879C242.408 12.8079 242.368 12.7039 242.368 12.5759C242.368 12.4399 242.408 12.3359 242.488 12.2639C242.568 12.1919 242.68 12.1559 242.824 12.1559H243.592V10.8479C243.592 10.6639 243.64 10.5279 243.736 10.4399C243.832 10.3439 243.968 10.2959 244.144 10.2959C244.32 10.2959 244.452 10.3439 244.54 10.4399C244.636 10.5279 244.684 10.6639 244.684 10.8479V12.1559H246.136C246.288 12.1559 246.404 12.1919 246.484 12.2639C246.564 12.3359 246.604 12.4399 246.604 12.5759C246.604 12.7039 246.564 12.8079 246.484 12.8879C246.404 12.9599 246.288 12.9959 246.136 12.9959H244.684V15.8519C244.684 16.2919 244.776 16.6239 244.96 16.8479C245.144 17.0719 245.448 17.1839 245.872 17.1839C246.024 17.1839 246.152 17.1719 246.256 17.1479C246.36 17.1159 246.452 17.0999 246.532 17.0999C246.604 17.0919 246.664 17.1159 246.712 17.1719C246.768 17.2279 246.796 17.3319 246.796 17.4839C246.796 17.5959 246.776 17.6999 246.736 17.7959C246.704 17.8839 246.636 17.9439 246.532 17.9759C246.436 18.0079 246.308 18.0359 246.148 18.0599C245.988 18.0919 245.844 18.1079 245.716 18.1079ZM250.234 18.1079C249.602 18.1079 249.058 17.9879 248.602 17.7479C248.154 17.4999 247.806 17.1519 247.558 16.7039C247.31 16.2479 247.186 15.7119 247.186 15.0959C247.186 14.4879 247.306 13.9559 247.546 13.4999C247.794 13.0439 248.13 12.6879 248.554 12.4319C248.986 12.1759 249.478 12.0479 250.03 12.0479C250.422 12.0479 250.774 12.1159 251.086 12.2519C251.406 12.3799 251.678 12.5679 251.902 12.8159C252.126 13.0639 252.294 13.3679 252.406 13.7279C252.526 14.0799 252.586 14.4799 252.586 14.9279C252.586 15.0559 252.546 15.1559 252.466 15.2279C252.394 15.2919 252.286 15.3239 252.142 15.3239H248.038V14.6279H251.866L251.662 14.7959C251.662 14.3799 251.598 14.0279 251.47 13.7399C251.35 13.4439 251.17 13.2199 250.93 13.0679C250.698 12.9159 250.406 12.8399 250.054 12.8399C249.67 12.8399 249.342 12.9319 249.07 13.1159C248.798 13.2919 248.59 13.5439 248.446 13.8719C248.302 14.1919 248.23 14.5639 248.23 14.9879V15.0599C248.23 15.7799 248.402 16.3239 248.746 16.6919C249.09 17.0599 249.586 17.2439 250.234 17.2439C250.49 17.2439 250.75 17.2119 251.014 17.1479C251.286 17.0839 251.546 16.9679 251.794 16.7999C251.914 16.7279 252.022 16.6959 252.118 16.7039C252.222 16.7039 252.306 16.7359 252.37 16.7999C252.434 16.8559 252.474 16.9279 252.49 17.0159C252.506 17.0959 252.494 17.1839 252.454 17.2799C252.414 17.3759 252.338 17.4599 252.226 17.5319C251.962 17.7159 251.646 17.8599 251.278 17.9639C250.918 18.0599 250.57 18.1079 250.234 18.1079ZM254.484 20.2439C254.316 20.2439 254.184 20.1959 254.088 20.0999C253.992 20.0039 253.944 19.8679 253.944 19.6919V12.6239C253.944 12.4399 253.992 12.3039 254.088 12.2159C254.184 12.1199 254.316 12.0719 254.484 12.0719C254.66 12.0719 254.792 12.1199 254.88 12.2159C254.976 12.3039 255.024 12.4399 255.024 12.6239V13.7159L254.892 13.4999C255.02 13.0599 255.272 12.7079 255.648 12.4439C256.024 12.1799 256.476 12.0479 257.004 12.0479C257.524 12.0479 257.976 12.1719 258.36 12.4199C258.744 12.6599 259.044 13.0079 259.26 13.4639C259.476 13.9119 259.584 14.4479 259.584 15.0719C259.584 15.6879 259.476 16.2279 259.26 16.6919C259.052 17.1479 258.752 17.4999 258.36 17.7479C257.976 17.9879 257.524 18.1079 257.004 18.1079C256.484 18.1079 256.036 17.9759 255.66 17.7119C255.284 17.4479 255.032 17.0999 254.904 16.6679H255.036V19.6919C255.036 19.8679 254.988 20.0039 254.892 20.0999C254.796 20.1959 254.66 20.2439 254.484 20.2439ZM256.752 17.2439C257.096 17.2439 257.396 17.1599 257.652 16.9919C257.916 16.8239 258.12 16.5799 258.264 16.2599C258.408 15.9399 258.48 15.5439 258.48 15.0719C258.48 14.3679 258.324 13.8319 258.012 13.4639C257.7 13.0959 257.28 12.9119 256.752 12.9119C256.4 12.9119 256.092 12.9959 255.828 13.1639C255.572 13.3239 255.372 13.5639 255.228 13.8839C255.092 14.2039 255.024 14.5999 255.024 15.0719C255.024 15.7759 255.18 16.3159 255.492 16.6919C255.804 17.0599 256.224 17.2439 256.752 17.2439Z\",\n    fill: \"#52AB98\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M335.913 174.42C334.669 164.434 328.473 154.596 318.938 151.347C322.698 161.624 322.698 172.899 318.936 183.176C317.471 187.134 315.428 191.384 316.806 195.373C317.664 197.855 319.762 199.754 322.107 200.942C324.452 202.129 327.054 202.695 329.624 203.25L330.13 203.668C334.209 194.467 337.156 184.405 335.913 174.42Z\",\n    fill: \"#F0F0F0\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M318.844 151.536C324.397 157.749 327.848 165.552 328.708 173.836C328.924 175.617 328.859 177.42 328.513 179.179C328.121 180.883 327.28 182.45 326.076 183.719C324.977 184.924 323.714 186.03 322.928 187.481C322.537 188.23 322.308 189.053 322.258 189.896C322.207 190.739 322.336 191.583 322.635 192.373C323.329 194.361 324.697 195.981 326.089 197.519C327.636 199.227 329.269 200.976 329.926 203.24C330.006 203.515 330.427 203.375 330.348 203.101C329.204 199.162 325.375 196.925 323.55 193.377C322.698 191.722 322.34 189.8 323.139 188.052C323.837 186.524 325.139 185.383 326.262 184.172C327.454 182.952 328.329 181.458 328.811 179.822C329.245 178.086 329.38 176.288 329.21 174.506C328.892 170.489 327.943 166.547 326.399 162.824C324.66 158.565 322.204 154.635 319.138 151.203C318.948 150.991 318.655 151.325 318.844 151.536Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M328.587 171.153C329.959 170.82 331.168 170.011 331.998 168.87C332.828 167.73 333.225 166.331 333.118 164.925C333.096 164.641 332.652 164.662 332.675 164.947C332.777 166.256 332.407 167.559 331.632 168.62C330.857 169.68 329.727 170.429 328.448 170.732C328.17 170.798 328.311 171.218 328.587 171.153Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M326.714 183.181C324.235 181.703 322.406 179.347 321.59 176.582C321.509 176.308 321.088 176.447 321.168 176.721C322.023 179.596 323.932 182.045 326.514 183.577C326.76 183.723 326.958 183.326 326.714 183.181Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M324.247 158.985C323.743 159.224 323.188 159.335 322.63 159.307C322.073 159.278 321.532 159.112 321.054 158.823C320.81 158.674 320.612 159.071 320.855 159.219C321.383 159.536 321.982 159.719 322.597 159.751C323.213 159.784 323.827 159.665 324.387 159.406C324.441 159.386 324.487 159.346 324.513 159.294C324.539 159.242 324.544 159.182 324.528 159.126C324.509 159.07 324.469 159.024 324.417 158.998C324.364 158.972 324.303 158.967 324.247 158.985Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M289.874 169.181C290.024 169.279 290.174 169.376 290.324 169.477C292.332 170.796 294.229 172.275 295.998 173.901C296.136 174.025 296.275 174.152 296.41 174.279C300.628 178.241 304.073 182.951 306.57 188.169C307.561 190.246 308.393 192.395 309.058 194.599C309.976 197.642 310.73 201.014 312.547 203.503C312.734 203.765 312.937 204.015 313.154 204.251H329.58C329.618 204.233 329.655 204.218 329.693 204.199L330.349 204.229C330.322 204.113 330.292 203.993 330.266 203.877C330.251 203.81 330.232 203.742 330.217 203.675C330.206 203.63 330.195 203.585 330.187 203.544C330.184 203.529 330.18 203.514 330.176 203.503C330.169 203.462 330.157 203.424 330.15 203.387C329.985 202.717 329.815 202.047 329.64 201.377C329.64 201.373 329.64 201.373 329.637 201.369C328.291 196.268 326.507 191.234 324.015 186.63C323.94 186.492 323.865 186.35 323.783 186.211C322.648 184.142 321.346 182.169 319.889 180.312C319.088 179.298 318.236 178.325 317.337 177.397C315.008 175.003 312.317 172.99 309.362 171.431C303.47 168.324 296.65 167.134 290.354 169.032C290.193 169.08 290.035 169.129 289.874 169.181Z\",\n    fill: \"#F0F0F0\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M289.91 169.39C298.09 171.012 305.55 175.167 311.23 181.265C312.476 182.556 313.511 184.035 314.296 185.648C315.01 187.243 315.283 189.001 315.086 190.738C314.936 192.361 314.594 194.003 314.841 195.635C314.98 196.468 315.294 197.262 315.762 197.966C316.229 198.669 316.841 199.266 317.556 199.717C319.309 200.887 321.377 201.358 323.417 201.749C325.681 202.182 328.039 202.597 329.929 204.01C330.158 204.181 330.41 203.816 330.182 203.645C326.894 201.188 322.488 201.703 318.892 199.968C317.214 199.159 315.769 197.839 315.354 195.964C314.99 194.324 315.341 192.63 315.508 190.988C315.724 189.296 315.523 187.578 314.921 185.982C314.221 184.334 313.245 182.818 312.035 181.498C309.359 178.481 306.225 175.904 302.747 173.86C298.792 171.505 294.461 169.844 289.945 168.947C289.665 168.892 289.633 169.335 289.91 169.39Z\",\n    fill: \"white\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M309.517 179.194C310.412 178.103 310.89 176.73 310.865 175.32C310.84 173.91 310.314 172.555 309.381 171.497C309.191 171.283 308.85 171.568 309.04 171.781C309.911 172.765 310.401 174.028 310.421 175.341C310.442 176.654 309.992 177.931 309.152 178.941C308.97 179.161 309.336 179.412 309.517 179.194Z\",\n    fill: \"white\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M315.272 189.925C312.402 190.235 309.521 189.454 307.203 187.736C306.973 187.566 306.72 187.931 306.95 188.101C309.366 189.883 312.366 190.69 315.351 190.361C315.636 190.329 315.555 189.893 315.272 189.925Z\",\n    fill: \"white\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M298.716 172.088C298.458 172.583 298.081 173.005 297.619 173.317C297.157 173.63 296.624 173.823 296.069 173.879C295.784 173.907 295.865 174.343 296.148 174.316C296.761 174.251 297.349 174.037 297.861 173.692C298.372 173.348 298.791 172.884 299.081 172.341C299.113 172.292 299.125 172.233 299.114 172.176C299.104 172.118 299.072 172.067 299.025 172.032C298.977 171.999 298.917 171.987 298.859 171.997C298.801 172.008 298.75 172.04 298.716 172.088Z\",\n    fill: \"white\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.99623 54.165C9.30786 54.165 11.9925 51.4838 11.9925 48.1765C11.9925 44.8691 9.30786 42.188 5.99623 42.188C2.68461 42.188 0 44.8691 0 48.1765C0 51.4838 2.68461 54.165 5.99623 54.165Z\",\n    fill: \"#E4E4E4\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M306.932 54.165C310.243 54.165 312.928 51.4838 312.928 48.1765C312.928 44.8691 310.243 42.188 306.932 42.188C303.62 42.188 300.936 44.8691 300.936 48.1765C300.936 51.4838 303.62 54.165 306.932 54.165Z\",\n    fill: \"#E4E4E4\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.806 47.8022H245.427V48.5508H308.806V47.8022Z\",\n    fill: \"#E4E4E4\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.748 47.8022H170.179V48.5508H228.748V47.8022Z\",\n    fill: \"#E4E4E4\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.585 47.8022H94.4346V48.5508H154.585V47.8022Z\",\n    fill: \"#E4E4E4\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.827 47.8022H5.99609V48.5508H77.827V47.8022Z\",\n    fill: \"#E4E4E4\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.25 56.5C84.6183 56.5 83.0233 56.0161 81.6666 55.1096C80.3098 54.2031 79.2524 52.9146 78.628 51.4071C78.0036 49.8996 77.8402 48.2409 78.1585 46.6405C78.4769 45.0402 79.2626 43.5701 80.4164 42.4164C81.5702 41.2626 83.0402 40.4769 84.6405 40.1585C86.2409 39.8402 87.8997 40.0036 89.4071 40.628C90.9146 41.2524 92.2031 42.3098 93.1096 43.6665C94.0161 45.0232 94.5 46.6183 94.5 48.25C94.4975 50.4373 93.6275 52.5343 92.0809 54.0809C90.5343 55.6276 88.4373 56.4975 86.25 56.5Z\",\n    fill: \"#52AB98\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.1958 56.785C84.491 56.785 82.8245 56.2802 81.407 55.3342C79.9895 54.3883 78.8847 53.0439 78.2323 51.4709C77.5799 49.8979 77.4092 48.167 77.7418 46.4972C78.0744 44.8273 78.8953 43.2934 80.1008 42.0895C81.3063 40.8856 82.8421 40.0657 84.5142 39.7335C86.1862 39.4014 87.9193 39.5719 89.4943 40.2234C91.0694 40.875 92.4156 41.9783 93.3627 43.394C94.3098 44.8096 94.8154 46.474 94.8154 48.1766C94.8128 50.4589 93.9038 52.647 92.2879 54.2608C90.672 55.8747 88.481 56.7824 86.1958 56.785ZM86.1958 40.3167C84.6392 40.3167 83.1176 40.7777 81.8234 41.6413C80.5292 42.505 79.5204 43.7325 78.9248 45.1687C78.3291 46.6049 78.1733 48.1853 78.4769 49.71C78.7806 51.2346 79.5301 52.6351 80.6308 53.7344C81.7314 54.8336 83.1338 55.5822 84.6604 55.8854C86.187 56.1887 87.7694 56.0331 89.2075 55.4382C90.6456 54.8433 91.8747 53.8358 92.7395 52.5433C93.6042 51.2507 94.0658 49.7311 94.0658 48.1766C94.0635 46.0927 93.2336 44.0949 91.7581 42.6214C90.2827 41.1479 88.2823 40.319 86.1958 40.3167Z\",\n    fill: \"#3F3D56\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M84.7486 52.056C84.5995 52.056 84.4565 51.9968 84.3511 51.8915L81.1656 48.7101C81.1132 48.6581 81.0716 48.5962 81.0432 48.528C81.0148 48.4598 81.0001 48.3867 81 48.3129C80.9999 48.239 81.0144 48.1659 81.0427 48.0977C81.0709 48.0295 81.1124 47.9675 81.1647 47.9152C81.2169 47.863 81.279 47.8216 81.3474 47.7934C81.4157 47.7652 81.4889 47.7507 81.5628 47.7508C81.6368 47.7509 81.71 47.7656 81.7782 47.794C81.8465 47.8224 81.9084 47.8639 81.9606 47.9163L84.7486 50.7007L90.2928 45.1636C90.3982 45.0587 90.5411 44.9999 90.69 45C90.8389 45.0001 90.9816 45.0593 91.0869 45.1644C91.1922 45.2696 91.2514 45.4121 91.2515 45.5608C91.2517 45.7095 91.1927 45.8522 91.0877 45.9575L85.1461 51.8915C85.0407 51.9968 84.8977 52.056 84.7486 52.056Z\",\n    fill: \"white\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.25 56.5C160.618 56.5 159.023 56.0161 157.667 55.1096C156.31 54.2031 155.252 52.9146 154.628 51.4071C154.004 49.8996 153.84 48.2409 154.159 46.6405C154.477 45.0402 155.263 43.5701 156.416 42.4164C157.57 41.2626 159.04 40.4769 160.641 40.1585C162.241 39.8402 163.9 40.0036 165.407 40.628C166.915 41.2524 168.203 42.3098 169.11 43.6665C170.016 45.0232 170.5 46.6183 170.5 48.25C170.498 50.4373 169.628 52.5343 168.081 54.0809C166.534 55.6276 164.437 56.4975 162.25 56.5Z\",\n    fill: \"#52AB98\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.62 56.785C160.915 56.785 159.248 56.2802 157.831 55.3342C156.413 54.3883 155.309 53.0439 154.656 51.4709C154.004 49.8979 153.833 48.167 154.166 46.4972C154.498 44.8273 155.319 43.2934 156.525 42.0895C157.73 40.8856 159.266 40.0657 160.938 39.7335C162.61 39.4014 164.343 39.5719 165.918 40.2234C167.493 40.875 168.839 41.9783 169.787 43.394C170.734 44.8096 171.239 46.474 171.239 48.1766C171.237 50.4589 170.328 52.647 168.712 54.2608C167.096 55.8747 164.905 56.7824 162.62 56.785ZM162.62 40.3167C161.063 40.3167 159.541 40.7777 158.247 41.6413C156.953 42.505 155.944 43.7325 155.349 45.1687C154.753 46.6049 154.597 48.1853 154.901 49.71C155.204 51.2346 155.954 52.6351 157.055 53.7344C158.155 54.8336 159.558 55.5822 161.084 55.8854C162.611 56.1887 164.193 56.0331 165.631 55.4382C167.069 54.8433 168.299 53.8358 169.163 52.5433C170.028 51.2507 170.49 49.7311 170.49 48.1766C170.487 46.0927 169.657 44.0949 168.182 42.6214C166.707 41.1479 164.706 40.319 162.62 40.3167Z\",\n    fill: \"#3F3D56\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M160.749 52.0576C160.6 52.0575 160.457 51.9984 160.351 51.8931L157.166 48.7117C157.113 48.6596 157.072 48.5977 157.043 48.5296C157.015 48.4614 157 48.3883 157 48.3145C157 48.2406 157.014 48.1675 157.043 48.0993C157.071 48.031 157.112 47.969 157.165 47.9168C157.217 47.8646 157.279 47.8232 157.347 47.795C157.416 47.7668 157.489 47.7523 157.563 47.7524C157.637 47.7525 157.71 47.7672 157.778 47.7955C157.846 47.8239 157.908 47.8655 157.961 47.9178L160.749 50.7023L166.293 45.1652C166.345 45.1129 166.407 45.0714 166.475 45.0431C166.543 45.0147 166.617 45.0001 166.69 45C166.764 44.9999 166.838 45.0144 166.906 45.0426C166.974 45.0708 167.036 45.1122 167.088 45.1644C167.141 45.2166 167.182 45.2786 167.21 45.3468C167.239 45.415 167.253 45.4881 167.253 45.5619C167.253 45.6357 167.238 45.7088 167.21 45.7769C167.182 45.8451 167.14 45.907 167.088 45.9591L161.146 51.8931C161.041 51.9984 160.898 52.0576 160.749 52.0576Z\",\n    fill: \"white\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.929 56.1267C235.295 56.1267 233.698 55.6428 232.339 54.7363C230.981 53.8298 229.922 52.5413 229.297 51.0338C228.672 49.5263 228.508 47.8675 228.827 46.2672C229.145 44.6668 229.932 43.1968 231.087 42.043C232.243 40.8893 233.715 40.1035 235.317 39.7852C236.919 39.4669 238.58 39.6302 240.09 40.2547C241.599 40.8791 242.889 41.9365 243.797 43.2932C244.705 44.6499 245.189 46.245 245.189 47.8767C245.187 50.064 244.316 52.161 242.767 53.7076C241.218 55.2542 239.119 56.1242 236.929 56.1267Z\",\n    fill: \"#F0F0F0\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.226 56.785C235.521 56.785 233.855 56.2802 232.437 55.3342C231.02 54.3883 229.915 53.0439 229.263 51.4709C228.61 49.8979 228.439 48.167 228.772 46.4972C229.105 44.8273 229.926 43.2934 231.131 42.0895C232.337 40.8856 233.872 40.0657 235.544 39.7335C237.216 39.4014 238.95 39.5719 240.525 40.2234C242.1 40.875 243.446 41.9783 244.393 43.394C245.34 44.8096 245.846 46.474 245.846 48.1766C245.843 50.4589 244.934 52.647 243.318 54.2608C241.702 55.8747 239.511 56.7824 237.226 56.785ZM237.226 40.3167C235.669 40.3167 234.148 40.7777 232.854 41.6413C231.559 42.505 230.551 43.7325 229.955 45.1687C229.359 46.6049 229.204 48.1853 229.507 49.71C229.811 51.2346 230.56 52.6351 231.661 53.7344C232.762 54.8336 234.164 55.5822 235.691 55.8854C237.217 56.1887 238.8 56.0331 240.238 55.4382C241.676 54.8433 242.905 53.8358 243.77 52.5433C244.635 51.2507 245.096 49.7311 245.096 48.1766C245.094 46.0927 244.264 44.0949 242.788 42.6214C241.313 41.1479 239.313 40.319 237.226 40.3167Z\",\n    fill: \"#CACACA\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.817 91.7862C230.149 91.7862 228.519 91.2923 227.132 90.367C225.746 89.4416 224.665 88.1264 224.027 86.5876C223.388 85.0488 223.221 83.3556 223.547 81.722C223.872 80.0884 224.675 78.5879 225.854 77.4102C227.034 76.2324 228.536 75.4304 230.172 75.1054C231.808 74.7805 233.503 74.9473 235.044 75.5846C236.585 76.222 237.902 77.3014 238.828 78.6863C239.755 80.0712 240.249 81.6993 240.249 83.3649C240.247 85.5976 239.357 87.7382 237.777 89.3169C236.196 90.8957 234.053 91.7837 231.817 91.7862Z\",\n    fill: \"#52AB98\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.254 85.9848C231.105 85.9847 230.962 85.9256 230.857 85.8203L227.671 82.6389C227.566 82.5336 227.507 82.3908 227.507 82.2419C227.507 82.0931 227.566 81.9503 227.671 81.845C227.777 81.7397 227.92 81.6806 228.069 81.6806C228.218 81.6806 228.361 81.7397 228.466 81.845L231.254 84.6295L236.799 79.0924C236.904 78.9875 237.047 78.9286 237.196 78.9287C237.345 78.9289 237.487 78.988 237.593 79.0932C237.698 79.1983 237.757 79.3409 237.757 79.4896C237.758 79.6383 237.699 79.7809 237.594 79.8863L231.652 85.8203C231.547 85.9256 231.404 85.9848 231.254 85.9848Z\",\n    fill: \"white\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M250.646 200.387L246.105 199.686L246.653 181.861L253.354 182.896L250.646 200.387Z\",\n    fill: \"#FFD3DA\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M251.123 204.961L236.482 202.7L236.511 202.515C236.745 201.006 237.569 199.651 238.803 198.749C240.037 197.847 241.579 197.471 243.091 197.704L252.033 199.085L251.123 204.961Z\",\n    fill: \"#2F2E41\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M298.367 199.937L293.777 200.133L290.838 182.543L297.613 182.255L298.367 199.937Z\",\n    fill: \"#FFD3DA\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M299.728 204.332L284.926 204.961L284.918 204.774C284.853 203.248 285.398 201.759 286.432 200.634C287.466 199.509 288.906 198.841 290.434 198.775L299.474 198.391L299.728 204.332Z\",\n    fill: \"#2F2E41\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M289.33 95.0716C289.547 95.0108 289.768 94.9695 289.993 94.9483L287.131 71.5555L277.421 51.0195C276.81 49.7277 276.713 48.2526 277.148 46.8917C277.583 45.5308 278.519 44.3854 279.767 43.6865C281.014 42.9877 282.481 42.7873 283.871 43.1259C285.261 43.4645 286.47 44.3169 287.255 45.511V45.5111C289.8 49.3808 291.725 53.6232 292.961 58.0853L297.04 72.8157L294.057 98.0769C294.172 98.7889 294.078 99.5187 293.786 100.179C293.495 100.839 293.019 101.4 292.416 101.796C291.813 102.193 291.108 102.406 290.386 102.411C289.663 102.417 288.955 102.213 288.346 101.826C287.737 101.439 287.253 100.884 286.952 100.229C286.651 99.573 286.547 98.8446 286.651 98.131C286.755 97.4174 287.063 96.749 287.538 96.2062C288.013 95.6635 288.636 95.2695 289.33 95.0716Z\",\n    fill: \"#FFD3DA\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.133 50.9764C274.431 49.0697 274.503 46.9647 275.334 45.1105C276.165 43.2564 277.688 41.7999 279.58 41.0519C281.471 40.304 283.579 40.3237 285.456 41.1071C287.333 41.8904 288.829 43.3751 289.624 45.2446L295.702 59.5203L283.434 73.5358L275.133 50.9764Z\",\n    fill: \"#2F2E41\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.708 53.4165L273.952 39.5681C279.648 35.8491 284.333 38.2809 286.831 44.6023C289.008 50.1101 290.697 57.0783 289.693 64.2706C287.442 80.3818 285.57 82.2361 285.57 82.2361C285.57 82.2361 299.624 97.7687 296.626 117.606L298.874 192.462L292.129 192.087L282.759 149.045L275.639 122.097L263.272 155.034L252.403 193.21L244.908 191.713L249.405 149.419L255.776 100.763L263.084 82.2361L259.524 69.3234C259.524 69.3234 255.402 60.3407 265.708 53.4165Z\",\n    fill: \"#2F2E41\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.31 73.1948C238.461 73.3612 238.597 73.5409 238.717 73.7316L258.393 60.7227L272.45 42.8717C273.335 41.7487 274.613 41.0024 276.026 40.7833C277.44 40.5642 278.884 40.8886 280.067 41.6911C281.251 42.4936 282.086 43.7144 282.403 45.1074C282.721 46.5004 282.498 47.9618 281.779 49.197C279.449 53.1997 276.509 56.8152 273.064 59.9131L261.692 70.1396L237.73 78.7612C237.144 79.1816 236.448 79.4237 235.727 79.4583C235.005 79.493 234.289 79.3188 233.665 78.9567C233.041 78.5946 232.534 78.06 232.207 77.4172C231.88 76.7745 231.745 76.0509 231.82 75.3337C231.895 74.6165 232.175 73.936 232.628 73.3744C233.081 72.8127 233.687 72.3936 234.372 72.1677C235.058 71.9417 235.794 71.9184 236.493 72.1006C237.192 72.2829 237.823 72.6628 238.31 73.1948Z\",\n    fill: \"#FFD3DA\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.467 40.8084C272.862 39.3296 274.78 38.4536 276.812 38.3674C278.844 38.2812 280.829 38.9916 282.344 40.347C283.859 41.7025 284.784 43.5955 284.921 45.6223C285.057 47.649 284.396 49.6489 283.077 51.1952L273.004 63.0035L254.968 58.3051L271.467 40.8084Z\",\n    fill: \"#2F2E41\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.162 33.2814C283.561 30.3338 285.546 23.5731 282.594 18.181C279.643 12.7889 272.873 10.8072 267.474 13.7548C262.075 16.7024 260.091 23.4631 263.042 28.8552C265.994 34.2473 272.763 36.229 278.162 33.2814Z\",\n    fill: \"#FFD3DA\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M270.955 10H278.152C282.87 10 286.695 14.2975 286.695 19.5987L286.362 32.4568C281.264 33.0902 276.277 34.4222 271.543 36.4151L270.871 33.5502L269.546 37.3232C268.368 37.8935 267.199 38.517 266.041 39.1939C267.393 32.8494 267.95 26.5197 267.021 21.6027H264.584V18.9385L263.756 21.6027H259.337C259.337 20.079 259.637 18.5702 260.221 17.1625C260.805 15.7548 261.661 14.4757 262.74 13.3983C263.818 12.3209 265.099 11.4663 266.509 10.8832C267.918 10.3001 269.429 9.99999 270.955 10Z\",\n    fill: \"#2F2E41\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M343.625 205H200.84C200.74 205 200.645 204.961 200.575 204.89C200.504 204.82 200.465 204.725 200.465 204.626C200.465 204.526 200.504 204.431 200.575 204.361C200.645 204.291 200.74 204.251 200.84 204.251H343.625C343.724 204.251 343.82 204.291 343.89 204.361C343.96 204.431 344 204.526 344 204.626C344 204.725 343.96 204.82 343.89 204.89C343.82 204.961 343.724 205 343.625 205Z\",\n    fill: \"#CACACA\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.1961 99.0786C86.0967 99.0786 86.0013 99.0392 85.931 98.969C85.8608 98.8988 85.8213 98.8036 85.8213 98.7043V56.7849C85.8213 56.6857 85.8608 56.5905 85.931 56.5203C86.0013 56.4501 86.0967 56.4106 86.1961 56.4106C86.2954 56.4106 86.3908 56.4501 86.461 56.5203C86.5313 56.5905 86.5708 56.6857 86.5708 56.7849V98.7043C86.5708 98.8036 86.5313 98.8988 86.461 98.969C86.3908 99.0392 86.2954 99.0786 86.1961 99.0786Z\",\n    fill: \"#3F3D56\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.7609 105.584C59.1302 105.584 58.5253 105.834 58.0794 106.279C57.6334 106.725 57.3828 107.329 57.3828 107.959C57.3828 108.589 57.6334 109.193 58.0794 109.638C58.5253 110.084 59.1302 110.334 59.7609 110.334H112.64C113.27 110.333 113.874 110.082 114.319 109.637C114.764 109.191 115.014 108.588 115.014 107.959C115.014 107.33 114.764 106.726 114.319 106.281C113.874 105.836 113.27 105.585 112.64 105.584H59.7609Z\",\n    fill: \"#E4E4E4\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.9398 116.84C73.6275 116.839 73.3181 116.9 73.0293 117.019C72.7406 117.137 72.478 117.312 72.2567 117.532C72.0354 117.752 71.8597 118.013 71.7396 118.301C71.6195 118.589 71.5573 118.898 71.5566 119.21C71.556 119.522 71.6168 119.831 71.7357 120.119C71.8547 120.408 72.0293 120.67 72.2496 120.891C72.47 121.112 72.7318 121.287 73.0201 121.407C73.3083 121.527 73.6175 121.589 73.9298 121.59H98.4612C99.0919 121.59 99.6968 121.34 100.143 120.894C100.589 120.449 100.839 119.845 100.839 119.215C100.839 118.585 100.589 117.981 100.143 117.535C99.6968 117.09 99.0919 116.84 98.4612 116.84H73.9398Z\",\n    fill: \"#E4E4E4\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.588 105.584C135.957 105.584 135.352 105.834 134.907 106.279C134.461 106.725 134.21 107.329 134.21 107.959C134.21 108.589 134.461 109.193 134.907 109.638C135.352 110.084 135.957 110.334 136.588 110.334H189.467C190.097 110.333 190.701 110.082 191.146 109.637C191.591 109.191 191.841 108.588 191.841 107.959C191.841 107.33 191.591 106.726 191.146 106.281C190.701 105.836 190.097 105.585 189.467 105.584H136.588Z\",\n    fill: \"#E4E4E4\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.767 116.84C150.455 116.839 150.145 116.9 149.856 117.019C149.568 117.137 149.305 117.312 149.084 117.532C148.863 117.752 148.687 118.013 148.567 118.301C148.447 118.589 148.384 118.898 148.384 119.21C148.383 119.522 148.444 119.831 148.563 120.119C148.682 120.408 148.856 120.67 149.077 120.891C149.297 121.112 149.559 121.287 149.847 121.407C150.135 121.527 150.445 121.589 150.757 121.59H175.288C175.919 121.59 176.524 121.34 176.97 120.894C177.416 120.449 177.666 119.845 177.666 119.215C177.666 118.585 177.416 117.981 176.97 117.535C176.524 117.09 175.919 116.84 175.288 116.84H150.767Z\",\n    fill: \"#E4E4E4\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.022 99.0786C162.923 99.0786 162.828 99.0392 162.757 98.969C162.687 98.8988 162.647 98.8036 162.647 98.7043V56.7849C162.647 56.6857 162.687 56.5905 162.757 56.5203C162.828 56.4501 162.923 56.4106 163.022 56.4106C163.122 56.4106 163.217 56.4501 163.287 56.5203C163.358 56.5905 163.397 56.6857 163.397 56.7849V98.7043C163.397 98.8036 163.357 98.8988 163.287 98.969C163.217 99.0392 163.122 99.0786 163.022 99.0786Z\",\n    fill: \"#3F3D56\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLastStep);\nexport default __webpack_public_path__ + \"static/media/last_step.3464db42fddaa0d1fda7e937dad74d9a.svg\";\nexport { ForwardRef as ReactComponent };","import Checkbox from \"@mui/material/Checkbox\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomCheckBox = styled(Checkbox)(({ theme, other }) => ({\r\n  \"& .MuiSvgIcon-root\": {\r\n    fontSize: other.checkboxsize ? other.checkboxsize : 28,\r\n  },\r\n  \"& + .MuiTypography-root\": {\r\n    fontSize: other.fontSize,\r\n  },\r\n  \"&.Mui-checked\": {\r\n    \"&, & + .MuiFormControlLabel-label\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst CMCheckBox = (props) => {\r\n  const { sx, ...rest } = props;\r\n  return (\r\n    <>\r\n      <CustomCheckBox sx={{ ...sx }} other={props} {...rest} />\r\n    </>\r\n  );\r\n};\r\nCMCheckBox.propTypes = {\r\n  sx: PropTypes.any,\r\n  children: PropTypes.any,\r\n};\r\nexport default CMCheckBox;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { get } from \"lodash\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport lastStepImg from \"../../../../assets/images/last_step.svg\";\r\nimport { DoubleCheckIcon } from \"../../../../components/icons\";\r\nimport { getMeInfo } from \"../../../../store/slice/auth/authentication/authSlice\";\r\nimport {\r\n  getHealthInfo,\r\n  postHealthInfo,\r\n} from \"../../../../store/slice/auth/signup/healthInfoSlice\";\r\nimport { expireTime, getCustomCookie } from \"../../../hooks/cookie\";\r\nimport translate from \"../../../hooks/translate\";\r\nimport CMCheckBox from \"../../../ui-components/form-components/CMCheckBox\";\r\n\r\nconst TermAndConditionForm = (props) => {\r\n  const { handleBack, healthInfo } = props;\r\n  const consultantProfilePath = getCustomCookie(\"consultantProfile\");\r\n  const [, setCookie] = useCookies();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const healthData = healthInfo;\r\n\r\n  const Schema = Yup.object().shape({\r\n    termAndCondition: Yup.boolean().oneOf(\r\n      [true],\r\n      translate(\"front_error_must_accept_terms_and_conditions\")\r\n    ),\r\n  });\r\n\r\n  const handleTermsCondition = async (payload) => {\r\n    const res = await dispatch(postHealthInfo(payload))\r\n      .unwrap()\r\n      .then(async (result) => {\r\n        if (result.status) {\r\n          dispatch(getHealthInfo());\r\n          await dispatch(getMeInfo())\r\n            .unwrap()\r\n            .then((result) => {\r\n              if (result.status) {\r\n                setCookie(\r\n                  \"isSignupCompleted\",\r\n                  get(result, \"data.termAndCondition\", false),\r\n                  {\r\n                    path: \"/\",\r\n                    expires: expireTime,\r\n                  }\r\n                );\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"OTP error=======>\", error);\r\n            });\r\n          navigate(\r\n            consultantProfilePath !== undefined\r\n              ? consultantProfilePath\r\n              : \"/dashboard\"\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\" basic err\", err);\r\n      });\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Formik\r\n          initialValues={{\r\n            termAndCondition: get(healthData, \"termAndCondition\", false),\r\n            subscription: get(healthData, \"subscription\", false),\r\n          }}\r\n          validationSchema={Schema}\r\n          onSubmit={(values) => {\r\n            const payload = {\r\n              termAndCondition: values.termAndCondition,\r\n              subscription: values.subscription,\r\n            };\r\n            handleTermsCondition(payload);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <form onSubmit={props.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={8} md={10} lg={8} className=\"mx-auto\">\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={lastStepImg}\r\n                    className=\"img-fluid w-100\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <CMCheckBox\r\n                          name=\"termAndCondition\"\r\n                          checked={props.values.termAndCondition}\r\n                          checkedIcon={<DoubleCheckIcon />}\r\n                          onChange={props.handleChange}\r\n                        />\r\n                      }\r\n                      label={translate(\"common_terms_and_conditions\")}\r\n                    />\r\n\r\n                    {props.errors.termAndCondition && (\r\n                      <FormHelperText error={true}>\r\n                        {props.errors.termAndCondition}\r\n                      </FormHelperText>\r\n                    )}\r\n                    <FormControlLabel\r\n                      control={\r\n                        <CMCheckBox\r\n                          name=\"subscription\"\r\n                          checked={props.values.subscription}\r\n                          checkedIcon={<DoubleCheckIcon />}\r\n                          onChange={props.handleChange}\r\n                        />\r\n                      }\r\n                      label={translate(\"common_subscription\")}\r\n                    />\r\n                    {props.errors.subscription && (\r\n                      <FormHelperText error={true}>\r\n                        {props.errors.subscription}\r\n                      </FormHelperText>\r\n                    )}\r\n                  </FormGroup>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={handleBack}\r\n                    >\r\n                      {translate(\"common_btn_back\")}\r\n                    </Button>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        disabled={props.isSubmitting}\r\n                      >\r\n                        {translate(\"common_finish\")}\r\n                      </Button>\r\n                    </Stack>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TermAndConditionForm;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepContent from \"@mui/material/StepContent\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { debounce, get } from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  decrementStep,\r\n  incrementStep,\r\n  incrementStepByAmount,\r\n} from \"../../../../store/slice/auth/signup/faqSlice\";\r\nimport {\r\n  getActiveLevel,\r\n  getDietaryPreference,\r\n  getGoalType,\r\n  getLeisureActiveLevel,\r\n} from \"../../../../store/slice/common\";\r\n\r\nimport {\r\n  getHealthData,\r\n  getHealthInfo,\r\n} from \"../../../../store/slice/auth/signup/healthInfoSlice\";\r\nimport ComponentStyle from \"../../../../styles/ComponentStyle.module.css\";\r\nimport AboutInfoForm from \"./AboutInfoForm\";\r\nimport BasicInfoForm from \"./BasicInfoForm\";\r\nimport MyGoalsForm from \"./MyGoalsForm\";\r\nimport TermAndConditionForm from \"./TermAndConditionForm\";\r\nimport translate from \"../../../hooks/translate\";\r\n\r\nconst QuestionStepper = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const healthData = useSelector(getHealthData);\r\n\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const handleNext = (index) => {\r\n    setActiveStep(() => index);\r\n    dispatch(incrementStep());\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    dispatch(decrementStep());\r\n  };\r\n\r\n  const callback = useCallback(async () => {\r\n    dispatch(getDietaryPreference({ sectionName: \"DIETARY_PREFERENCE\" }));\r\n    dispatch(getActiveLevel({ sectionName: \"WORK_ACTIVITY_LEVEL\" }));\r\n    dispatch(\r\n      getLeisureActiveLevel({ sectionName: \"LEISURE_TIME_ACTIVITY_LEVEL\" })\r\n    );\r\n    dispatch(getGoalType({ sectionName: \"GOAL_TYPE\" }));\r\n    await dispatch(getHealthInfo())\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          dispatch(incrementStepByAmount(get(result.data, \"step\", 0)));\r\n          setActiveStep(get(result.data, \"step\", 0));\r\n          setStatus(true);\r\n        }\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const debounceFn = useMemo(() => debounce(callback, 1000), [callback]);\r\n\r\n  useEffect(() => {\r\n    debounceFn();\r\n  }, [debounceFn]);\r\n\r\n  const steps = [\r\n    {\r\n      label: translate(\"common_basic_information\"),\r\n      formData: (\r\n        <BasicInfoForm\r\n          handleNext={handleNext}\r\n          handleBack={handleBack}\r\n          healthInfo={healthData}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: translate(\"front_about_me\"),\r\n      formData: (\r\n        <AboutInfoForm\r\n          handleNext={handleNext}\r\n          handleBack={handleBack}\r\n          healthInfo={healthData}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: translate(\"front_my_goals\"),\r\n      formData: (\r\n        <MyGoalsForm\r\n          handleNext={handleNext}\r\n          handleBack={handleBack}\r\n          healthInfo={healthData}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: translate(\"common_terms_and_conditions\"),\r\n      formData: (\r\n        <TermAndConditionForm\r\n          handleNext={handleNext}\r\n          handleBack={handleBack}\r\n          healthInfo={healthData}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"div\">\r\n        <Stepper\r\n          activeStep={activeStep}\r\n          orientation=\"vertical\"\r\n          className={ComponentStyle.stepper}\r\n        >\r\n          {status &&\r\n            steps.map((step, index) => (\r\n              <Step key={index}>\r\n                <StepLabel\r\n                  optional={\r\n                    index === 4 ? (\r\n                      <Typography variant=\"caption\">\r\n                        {translate(\"common_last_step\")}\r\n                      </Typography>\r\n                    ) : null\r\n                  }\r\n                >\r\n                  {step.label}\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <Box>{step.formData}</Box>\r\n                </StepContent>\r\n              </Step>\r\n            ))}\r\n        </Stepper>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionStepper;\r\n","import React from \"react\";\r\n\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport Faq from \"../../../components/pages/auth/signup/Faq\";\r\nimport QuestionStepper from \"../../../components/pages/auth/signup/QuestionStepper\";\r\n\r\nconst HealthInfo = () => {\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"section\"\r\n        sx={{ py: { sm: 6.4, xs: 4 } }}\r\n        className=\"d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            sx={{ justifyContent: { md: \"space-between\", xs: \"center\" } }}\r\n            column={12}\r\n          >\r\n            <Grid item lg={6} md={6}>\r\n              <QuestionStepper />\r\n            </Grid>\r\n            <Grid item lg={5} md={6}>\r\n              <Faq />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HealthInfo;\r\n"],"names":["Accordion","styled","props","_jsx","MuiAccordion","_objectSpread","disableGutters","elevation","_ref","theme","border","concat","palette","grey","backgroundColor","primary","lighter","marginBottom","borderRadius","display","AccordionSummary","MuiAccordionSummary","_ref2","ContrastText","AccordionDetails","MuiAccordionDetails","_ref3","padding","spacing","textAlign","_useState","useState","_useState2","_slicedToArray","expanded","setExpanded","dispatch","useDispatch","store","useSelector","getFaqData","faqList","faqData","faqStep","filter","data","step","useEffect","getFaqInfo","_jsxs","_Fragment","children","length","Typography","variant","gutterBottom","translate","map","item","index","onChange","panel","event","newExpanded","id","expandIcon","IconButton","sx","HorizontalRuleIcon","AddIcon","titleMacro","color","descriptionMacro","_id","handleNext","handleBack","healthInfo","dietPreferenceList","state","common","dietPreference","workActiveLevelList","workActiveLevel","leisureActiveLevelList","leisureActiveLevel","healthData","Schema","Yup","shape","required","eatingDisorder","handleAboutInfo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","res","wrap","_context","prev","next","postHealthInfo","unwrap","then","result","status","getHealthInfo","catch","err","console","log","sent","abrupt","stop","_x","apply","arguments","Box","Formik","initialValues","get","validationSchema","onSubmit","_callee2","values","_context2","_x2","handleSubmit","Grid","container","xs","FormControl","fullWidth","FormLabel","className","RadioGroup","name","value","e","setFieldValue","row","marginLeft","marginTop","FormControlLabel","control","CMRadio","varianttype","label","macroName","ComponentStyle","radio_option","FormHelperText","error","ErrorMessage","errors","touched","Stack","direction","justifyContent","Button","type","onClick","disabled","isSubmitting","useTheme","weightValueFirst","String","split","weightValueSecond","heightValueFirst","heightValueSecond","initialAge","moment","subtract","month","year","getAge","age","weightFirstInput","when","weightUnit","positive","min","max","weightSecondInput","heightFirstInput","heightUnit","heightSecondInput","radioColor","fontSize","secondary","main","handleBasicInfo","gender","weightValue","heightValue","format","parseFloat","parseInt","weight","unit","height","Radio","icon","MaleIcon","checkedIcon","FemaleIcon","MobileDatePicker","newValue","newDate","onBlur","handleBlur","toolbarPlaceholder","closeOnSelect","toolbarTitle","views","maxDate","disableFuture","renderInput","params","TextField","helperText","htmlFor","handleChange","inputProps","inputMode","maxLength","CMSlider","Slider","other","lineHeight","width","alpha","light","rest","_objectWithoutProperties","_excluded","valueLabelDisplay","goalTypeList","goalType","getHealthData","totalWeight","calculatePercent","percentToGet","total","toFixed","initialWeight","goalWeight","setGoalWeight","marks","perWeek","kg","lbs","stLbs","_useState3","_useState4","perWeekGoalWeight","setPerWeekGoalWeight","valuetext","valuetext1","handleSliderChange","handleGoalWeight","handleInputChange","target","Number","overallGoal","handleMyGoalWeight","getAriaValueText","valueLabelFormat","readOnly","maxWidth","CustomCheckBox","Checkbox","checkboxsize","consultantProfilePath","getCustomCookie","_useCookies","useCookies","setCookie","navigate","useNavigate","termAndCondition","oneOf","handleTermsCondition","getMeInfo","path","expires","expireTime","undefined","subscription","sm","md","lg","component","src","lastStepImg","FormGroup","CMCheckBox","checked","DoubleCheckIcon","activeStep","setActiveStep","setStatus","incrementStep","prevActiveStep","decrementStep","callback","useCallback","getDietaryPreference","sectionName","getActiveLevel","getLeisureActiveLevel","getGoalType","incrementStepByAmount","debounceFn","useMemo","debounce","steps","formData","BasicInfoForm","AboutInfoForm","MyGoalsForm","TermAndConditionForm","Stepper","orientation","stepper","Step","StepLabel","optional","StepContent","py","Container","column","QuestionStepper","Faq"],"sourceRoot":""}