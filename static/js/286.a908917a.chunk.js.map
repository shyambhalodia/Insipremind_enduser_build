{"version":3,"file":"static/js/286.a908917a.chunk.js","mappings":"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","sources":["components/pages/auth/login/LoginForm.jsx","pages/auth/login/Login.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { alpha, styled } from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { get } from \"lodash\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  getMeInfo,\r\n  setAuthToken,\r\n  setIsLoggedIn,\r\n} from \"../../../../store/slice/auth/authentication/authSlice\";\r\nimport { postSignin } from \"../../../../store/slice/auth/signin/signinSlice\";\r\nimport { handleIsPhoneNumber } from \"../../../../store/slice/auth/signup/signupSlice\";\r\nimport cookie, {\r\n  expireTime,\r\n  getCustomCookie,\r\n  setCustomCookie,\r\n} from \"../../../hooks/cookie\";\r\nimport { FaceBookIcon, GoogleIcon } from \"../../../icons\";\r\nimport CMLoadingButton from \"../../../ui-components/buttons/CMLoadingButton\";\r\nimport translate from \"../../../hooks/translate\";\r\n\r\nconst ScoialIcon = {\r\n  fontSize: \"32px\",\r\n};\r\nconst CMIconButton = styled(IconButton)(({ theme }) => ({\r\n  border: `1px solid ${alpha(theme.palette.grey[400], 0.3)}`,\r\n}));\r\nconst LoginForm = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const consultantProfilePath = getCustomCookie(\"consultantProfile\");\r\n  const [, setCookie] = useCookies();\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isPhoneNumber, setIsPhoneNumber] = useState(false);\r\n\r\n  const loading = useSelector((state) => state.signin.loading);\r\n\r\n  const externalSavedRoute = localStorage.getItem(\"externalSavedRoute\");\r\n\r\n  const phoneRegExp = /^\\d{10}$/;\r\n\r\n  const schemaObj = Yup.object().shape({\r\n    emailOrPhoneNumber: Yup.string()\r\n      .when({\r\n        is: () => {\r\n          return isPhoneNumber;\r\n        },\r\n        then: Yup.string()\r\n          .max(10, translate(\"front_error_mobile_number_too_long\"))\r\n          .length(10, translate(\"front_error_mobile_number_not_valid\"))\r\n          .matches(\r\n            phoneRegExp,\r\n            translate(\"front_error_mobile_number_not_valid\")\r\n          )\r\n          .required(translate(\"front_error_mobile_number_required\")),\r\n      })\r\n      .when({\r\n        is: () => {\r\n          return !isPhoneNumber;\r\n        },\r\n        then: Yup.string()\r\n          .email(translate(\"common_error_email_valid_email\"))\r\n          .required(translate(\"common_error_email_required\")),\r\n      }),\r\n\r\n    password: Yup.string()\r\n      .min(6, translate(\"common_error_password_too_short_min_6_length\"))\r\n      .max(18, translate(\"common_error_password_too_long_max_18_length\"))\r\n      .required(translate(\"common_error_password_required\")),\r\n  });\r\n\r\n  const cookieData = getCustomCookie(\"remember_me\");\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleSignin = async (data) => {\r\n    if (!executeRecaptcha) {\r\n      toast.error(\"You are not authorized\");\r\n      return;\r\n    }\r\n    const token = await executeRecaptcha(\"yourAction\");\r\n\r\n    isPhoneNumber && dispatch(handleIsPhoneNumber(isPhoneNumber));\r\n\r\n    const signinPayload = {\r\n      mobile: isPhoneNumber ? get(data, \"emailOrPhoneNumber\", \"\") : \"\",\r\n      email: !isPhoneNumber ? get(data, \"emailOrPhoneNumber\", \"\") : \"\",\r\n      password: data.password,\r\n      googleRecaptchaToken: token,\r\n    };\r\n\r\n    const res = await dispatch(postSignin(signinPayload))\r\n      .unwrap()\r\n      .then(async (result) => {\r\n        if (result.status && get(result, \"data.token\", \"\") !== \"\") {\r\n          const userData = {\r\n            token: get(result, \"data.token\"),\r\n          };\r\n          setCookie(\"user_data\", userData, { path: \"/\", expires: expireTime });\r\n\r\n          dispatch(setAuthToken(result.data.token));\r\n          dispatch(setIsLoggedIn(true));\r\n          toast.success(result.message);\r\n\r\n          await dispatch(getMeInfo())\r\n            .unwrap()\r\n            .then((res) => {\r\n              if (res.status) {\r\n                cookie.remove(\"consultantProfile\", { path: \"/\" });\r\n                setCookie(\r\n                  \"isSignupCompleted\",\r\n                  get(res, \"data.termAndCondition\", false),\r\n                  { path: \"/\", expires: expireTime }\r\n                );\r\n                localStorage.removeItem(\"externalSavedRoute\");\r\n                get(res, \"data.termAndCondition\", false)\r\n                  ? externalSavedRoute\r\n                    ? navigate(externalSavedRoute)\r\n                    : navigate(\r\n                        consultantProfilePath !== undefined\r\n                          ? consultantProfilePath\r\n                          : \"/dashboard\"\r\n                      )\r\n                  : navigate(\"/health-info\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"me error=======>\", error);\r\n            });\r\n        } else {\r\n          toast.error(result.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"signin error========>\", error);\r\n      });\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={0}>\r\n        <CardContent>\r\n          <Formik\r\n            initialValues={{\r\n              emailOrPhoneNumber: get(cookieData, \"emailOrPhoneNumber\", \"\"),\r\n              password: \"\",\r\n              rememberMe: false,\r\n            }}\r\n            validationSchema={schemaObj}\r\n            onSubmit={(values) => {\r\n              handleSignin(values);\r\n              if (values.rememberMe) {\r\n                const rememberMeData = {\r\n                  emailOrPhoneNumber: values.emailOrPhoneNumber,\r\n                };\r\n                setCustomCookie(\"remember_me\", rememberMeData);\r\n              }\r\n            }}\r\n          >\r\n            {(props) => (\r\n              <form onSubmit={props.handleSubmit}>\r\n                <Typography variant=\"h4\" align=\"center\" mb={3}>\r\n                  {translate(\"front_get_ready_to_login\")}\r\n                </Typography>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  spacing={3}\r\n                  justifyContent=\"center\"\r\n                  mb={3}\r\n                >\r\n                  <CMIconButton aria-label=\"fingerprint\" color=\"success\">\r\n                    <GoogleIcon sx={ScoialIcon} />\r\n                  </CMIconButton>\r\n                  <CMIconButton aria-label=\"fingerprint\" color=\"success\">\r\n                    <FaceBookIcon sx={ScoialIcon} />\r\n                  </CMIconButton>\r\n                </Stack>\r\n                <Divider>{translate(\"common_or\")}</Divider>\r\n                <Typography variant=\"body1\" align=\"center\" my={2}>\r\n                  {translate(\r\n                    \"front_sign_in_with_email_address_or_phone_number\"\r\n                  )}\r\n                </Typography>\r\n                <Grid container spacing={2} justifyContent=\"center\">\r\n                  <Grid item xs={12}>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                      <TextField\r\n                        label={translate(\"front_email_or_phone_number\")}\r\n                        name=\"emailOrPhoneNumber\"\r\n                        value={props.values.emailOrPhoneNumber}\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                          props.setFieldValue(\r\n                            \"emailOrPhoneNumber\",\r\n                            e.target.value\r\n                          );\r\n                          get(props.values, \"emailOrPhoneNumber\", \"\").match(\r\n                            /^[0-9]+$/\r\n                          )\r\n                            ? setIsPhoneNumber(true)\r\n                            : setIsPhoneNumber(false);\r\n                        }}\r\n                        inputProps={{\r\n                          maxLength: isPhoneNumber ? 10 : \"\",\r\n                        }}\r\n                        onBlur={props.handleBlur}\r\n                        error={\r\n                          props.errors.emailOrPhoneNumber &&\r\n                          props.touched.emailOrPhoneNumber\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        helperText={\r\n                          props.errors.emailOrPhoneNumber &&\r\n                          props.touched.emailOrPhoneNumber\r\n                            ? props.errors.emailOrPhoneNumber\r\n                            : null\r\n                        }\r\n                      />\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <FormControl fullWidth variant=\"outlined\">\r\n                      <InputLabel\r\n                        error={props.errors.password && props.touched.password}\r\n                        htmlFor=\"outlined-adornment-password\"\r\n                      >\r\n                        {translate(\"common_password\")}\r\n                      </InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        label={translate(\"common_password\")}\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        name=\"password\"\r\n                        value={props.values.password}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                              onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <VisibilityOff />\r\n                              ) : (\r\n                                <Visibility />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                        error={\r\n                          props.errors.password && props.touched.password\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                      {props.errors.password && props.touched.password && (\r\n                        <FormHelperText error id=\"outlined-adornment-password\">\r\n                          {props.errors.password}\r\n                        </FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                    <Stack\r\n                      direction={{ xs: \"column\", sm: \"row\" }}\r\n                      alignItems={{ xs: \"start\", sm: \"center\" }}\r\n                      justifyContent={{ xs: \"center\", sm: \"space-between\" }}\r\n                      sx={{ width: \"100%\" }}\r\n                    >\r\n                      <Box component=\"div\">\r\n                        <FormGroup>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                name=\"rememberMe\"\r\n                                value={props.values.rememberMe}\r\n                                onChange={props.handleChange}\r\n                              />\r\n                            }\r\n                            label={translate(\"common_remember_me\") + \" ?\"}\r\n                          />\r\n                        </FormGroup>\r\n                      </Box>\r\n                      <Box component=\"div\">\r\n                        <Link to=\"/recover/account\">\r\n                          {translate(\"common_forgot_password\")} ?\r\n                        </Link>\r\n                      </Box>\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CMLoadingButton\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      type=\"submit\"\r\n                      loading={props.isSubmitting && loading}\r\n                      disabled={props.isSubmitting && loading}\r\n                    >\r\n                      {translate(\"common_sign_in\")}\r\n                    </CMLoadingButton>\r\n                  </Grid>\r\n                  <Typography variant=\"body1\" mt={2}>\r\n                    {translate(\"common_dont_have_an_account\")} ?{\" \"}\r\n                    <Link to=\"/signup\">{translate(\"common_sign_up\")}</Link>\r\n                  </Typography>\r\n                </Grid>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </CardContent>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport React from \"react\";\r\nimport LoginForm from \"../../../components/pages/auth/login/LoginForm\";\r\nimport { GoogleReCaptchaProvider } from \"react-google-recaptcha-v3\";\r\n\r\nconst Login = () => {\r\n  const GOOGLE_RECAPTCHA_KEY = process.env.REACT_APP_GOOGLE_RECAPTCHA_KEY;\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"section\"\r\n        sx={{ py: { sm: 6.4, xs: 4 } }}\r\n        className=\"d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2} justifyContent=\"center\">\r\n            <Grid item xs={12} sm={8} md={6} lg={5} xl={4}>\r\n              <GoogleReCaptchaProvider reCaptchaKey={GOOGLE_RECAPTCHA_KEY}>\r\n                <LoginForm />\r\n              </GoogleReCaptchaProvider>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["ScoialIcon","fontSize","CMIconButton","styled","IconButton","_ref","theme","border","concat","alpha","palette","grey","navigate","useNavigate","dispatch","useDispatch","consultantProfilePath","getCustomCookie","_useCookies","useCookies","setCookie","_slicedToArray","executeRecaptcha","useGoogleReCaptcha","_useState","useState","_useState2","showPassword","setShowPassword","_useState3","_useState4","isPhoneNumber","setIsPhoneNumber","loading","useSelector","state","signin","externalSavedRoute","localStorage","getItem","schemaObj","Yup","shape","emailOrPhoneNumber","when","is","then","max","translate","length","matches","required","email","password","min","cookieData","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleSignin","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","data","token","signinPayload","res","wrap","_context2","prev","next","toast","error","abrupt","sent","handleIsPhoneNumber","mobile","get","googleRecaptchaToken","postSignin","unwrap","_ref3","_callee","result","userData","_context","status","path","expires","expireTime","setAuthToken","setIsLoggedIn","success","message","getMeInfo","cookie","remove","removeItem","undefined","catch","console","log","stop","_x2","apply","arguments","_x","_jsx","_Fragment","children","Paper","elevation","CardContent","Formik","initialValues","rememberMe","validationSchema","onSubmit","values","rememberMeData","setCustomCookie","props","_jsxs","handleSubmit","Typography","variant","align","mb","Stack","direction","spacing","justifyContent","color","GoogleIcon","sx","FaceBookIcon","Divider","my","Grid","container","item","xs","TextField","label","name","value","fullWidth","onChange","e","setFieldValue","target","match","inputProps","maxLength","onBlur","handleBlur","errors","touched","helperText","FormControl","InputLabel","htmlFor","OutlinedInput","id","type","handleChange","endAdornment","InputAdornment","position","onClick","onMouseDown","edge","VisibilityOff","Visibility","FormHelperText","sm","alignItems","width","Box","component","FormGroup","FormControlLabel","control","Checkbox","Link","to","CMLoadingButton","isSubmitting","disabled","mt","py","className","Container","maxWidth","md","lg","xl","GoogleReCaptchaProvider","reCaptchaKey","process","LoginForm"],"sourceRoot":""}