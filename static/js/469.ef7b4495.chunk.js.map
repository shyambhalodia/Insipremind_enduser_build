{"version":3,"file":"static/js/469.ef7b4495.chunk.js","mappings":"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","sources":["components/pages/health-recipe/health-recipe-detail/components/RecipeDetailSkeleton.jsx","components/pages/health-recipe/health-recipe-detail/components/RecipeLikeDislike.jsx","components/pages/health-recipe/health-recipe-detail/components/RecipeRating.jsx","components/pages/health-recipe/health-recipe-detail/components/RecipeSocialIcon.jsx","components/pages/health-recipe/health-recipe-detail/RecentRecipe.jsx","components/pages/health-recipe/health-recipe-detail/comment/ReportModal.jsx","components/pages/health-recipe/health-recipe-detail/comment/RecipeCommentOptions.jsx","components/pages/health-recipe/health-recipe-detail/comment/index.jsx","components/pages/health-recipe/health-recipe-detail/RelatedRecipe.jsx","components/pages/health-recipe/health-recipe-detail/RecipeDetailPage.jsx","../node_modules/@mui/icons-material/FiberManualRecord.js","../node_modules/@mui/icons-material/OndemandVideo.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nconst RecipeDetailSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Paper variant=\"outlined\" className=\"w-100\">\r\n        <CardContent>\r\n          <Skeleton animation=\"wave\" height={20} />\r\n          <Box className=\"mt-3\">\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            </Box>         \r\n          <Divider orientation=\"horizontal\" flexItem className=\"my-3\" />\r\n          <Box className=\"my-3\">\r\n            <Skeleton animation=\"wave\" height={10} className=\"mb-2\" />\r\n            <Skeleton animation=\"wave\" variant=\"rectangular\" height={300} />\r\n            <Skeleton animation=\"wave\" width={100} height={10} />\r\n          </Box>\r\n          <Box className=\"mt-3\">\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n          </Box>\r\n          <Box className=\"my-3\">\r\n            <Skeleton animation=\"wave\" variant=\"rectangular\" height={350} />\r\n            <Skeleton animation=\"wave\" width={100} height={10} />\r\n          </Box>\r\n          <Box className=\"mt-3\">\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n            <Skeleton animation=\"wave\" height={8} />\r\n          </Box>\r\n        </CardContent>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeDetailSkeleton;\r\n","import React from \"react\";\r\n\r\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\r\nimport ThumbUpAltIcon from \"@mui/icons-material/ThumbUpAlt\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { get } from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { postRecipeLike } from \"../../../../../store/slice/recipe/RecipeSlice\";\r\n\r\nconst RecipeLikeDislike = (props) => {\r\n  const { likeCount } = props;\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const recipeId = params._id;\r\n\r\n  const recipeUserData = useSelector((state) => state.recipe.recipeUserData);\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const handleLikeUpdate = async (checked, formProps) => {\r\n    if (isLoggedIn) {\r\n      const data = {\r\n        recipeId: recipeId,\r\n        like: checked,\r\n      };\r\n      const res = await dispatch(postRecipeLike(data))\r\n        .unwrap()\r\n        .then((result) => {\r\n          if (result.status) {\r\n            formProps.setFieldValue(\"totalLikeCount\", result.data.likeCount);\r\n            toast.success(result.message);\r\n          } else {\r\n            toast.error(result.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"recipe Like error========>\", error);\r\n        });\r\n      return res;\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  const loading = useSelector((state) => state.recipe.loading);\r\n  return (\r\n    <>\r\n      {loading ? null : (\r\n        <Formik\r\n          initialValues={{\r\n            like: get(recipeUserData, \"like\", false),\r\n            totalLikeCount: likeCount,\r\n          }}\r\n        >\r\n          {(props) => {\r\n            return (\r\n              <form onSubmit={props.handleSubmit}>\r\n                {/* {console.log(\"props\", props)} */}\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label={\r\n                    <FormControlLabel\r\n                      sx={{\r\n                        \"& .MuiFormControlLabel-label\": { fontSize: \"14px\" },\r\n                      }}\r\n                      control={\r\n                        <Checkbox\r\n                          disabled={!isLoggedIn}\r\n                          color=\"primary\"\r\n                          onChange={(e) =>\r\n                            props.setFieldValue(\"like\", e.target.checked)\r\n                          }\r\n                          checked={props.values.like}\r\n                          onClick={(e) =>\r\n                            handleLikeUpdate(e.target.checked, props)\r\n                          }\r\n                          icon={\r\n                            <ThumbUpOffAltIcon\r\n                              sx={{\r\n                                borderRight: \"1px solid #7e7e7e\",\r\n                                paddingRight: \"5px\",\r\n                              }}\r\n                            />\r\n                          }\r\n                          checkedIcon={\r\n                            <ThumbUpAltIcon\r\n                              sx={{\r\n                                borderRight: \"1px solid #7e7e7e\",\r\n                                paddingRight: \"5px\",\r\n                              }}\r\n                            />\r\n                          }\r\n                        />\r\n                      }\r\n                      label={\r\n                        props.values.totalLikeCount === 0\r\n                          ? \"Likes\"\r\n                          : `${props.values.totalLikeCount} ${\"Likes\"}`\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeLikeDislike;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport SentimentSatisfiedAltIcon from \"@mui/icons-material/SentimentSatisfiedAlt\";\r\nimport StarRoundedIcon from \"@mui/icons-material/StarRounded\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport { get } from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getRecipeUserData,\r\n  postRecipeRating,\r\n} from \"../../../../../store/slice/recipe/RecipeSlice\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst RecipeRating = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const recipeId = params._id;\r\n\r\n  const recipeUserData = useSelector((state) => state.recipe.recipeUserData);\r\n  useEffect(() => {\r\n    dispatch(getRecipeUserData(recipeId));\r\n  }, [dispatch, recipeId]);\r\n  const loading = useSelector((state) => state.recipe.loading);\r\n\r\n  const handleRating = (value) => {\r\n    if (get(recipeUserData, \"ratingStatus\", false)) {\r\n      return;\r\n    } else {\r\n      const payload = {\r\n        recipeId: recipeId,\r\n        rating: value,\r\n      };\r\n      dispatch(postRecipeRating(payload))\r\n        .unwrap()\r\n        .then((result) => {\r\n          if (result.status) {\r\n            toast.success(result.message);\r\n          } else toast.error(result.message);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Stack\r\n          direction=\"row\"\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          sx={{ color: \"grey.500\" }}\r\n        >\r\n          <CircularProgress color=\"inherit\" size={25} />\r\n          <Typography variant=\"body1\">Please wait...</Typography>\r\n        </Stack>\r\n      ) : (\r\n        <Formik\r\n          initialValues={{\r\n            rating: get(recipeUserData, \"rating\", 0),\r\n          }}\r\n        >\r\n          {(props) => {\r\n            return (\r\n              <form onSubmit={props.handleSubmit}>\r\n                <Rating\r\n                  name=\"rating\"\r\n                  value={props.values.rating}\r\n                  onChange={(e, newValue) => {\r\n                    props.setFieldValue(\"rating\", newValue);\r\n                    handleRating(newValue);\r\n                  }}\r\n                  icon={<StarRoundedIcon sx={{ fontSize: \"inherit\" }} />}\r\n                  emptyIcon={<StarRoundedIcon sx={{ fontSize: \"inherit\" }} />}\r\n                  size=\"large\"\r\n                  disabled={get(recipeUserData, \"ratingStatus\", false)}\r\n                />\r\n                {get(recipeUserData, \"ratingStatus\", false) ? (\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <Typography variant=\"subtitle2\" color=\"primary\">\r\n                      Sorry you have already rate this recipe...\r\n                    </Typography>\r\n                    <SentimentSatisfiedAltIcon color=\"primary\" />{\" \"}\r\n                  </Stack>\r\n                ) : null}\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeRating;\r\n","import React from \"react\";\r\n\r\nimport BookmarkBorderRoundedIcon from \"@mui/icons-material/BookmarkBorderRounded\";\r\nimport BookmarkRoundedIcon from \"@mui/icons-material/BookmarkRounded\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { get, map } from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport FacebookIcon from \"../../../../../assets/icons/facebook-icon.png\";\r\nimport linkedinIcon from \"../../../../../assets/icons/linkedin-icon.png\";\r\nimport TwitterIcon from \"../../../../../assets/icons/twitter-icon.png\";\r\nimport { postRecipeSave } from \"../../../../../store/slice/recipe/RecipeSlice\";\r\n\r\nconst socialMediaIcons = [\r\n  {\r\n    name: FacebookIcon,\r\n    link: \"https://developers.facebook.com/tools/debug/\",\r\n    toolTip: \"Facebook\",\r\n  },\r\n  {\r\n    name: linkedinIcon,\r\n    link: \"https://www.linkedin.com/post-inspector/\",\r\n    toolTip: \"Linkedin\",\r\n  },\r\n  {\r\n    name: TwitterIcon,\r\n    link: \"https://cards-dev.twitter.com/validator\",\r\n    toolTip: \"Twitter\",\r\n  },\r\n];\r\n\r\nconst RecipeSocialIcon = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const recipeId = params._id;\r\n\r\n  const recipeUserData = useSelector((state) => state.recipe.recipeUserData);\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const handleSave = async (checked) => {\r\n    const data = {\r\n      recipeId: recipeId,\r\n      isSaved: checked,\r\n    };\r\n    const res = await dispatch(postRecipeSave(data))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          toast.success(result.message);\r\n        } else {\r\n          toast.error(result.message);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          isSaved: get(recipeUserData, \"save\", false),\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <form\r\n            onSubmit={props.handleSubmit}\r\n            className=\"d-flex flex-column h-100\"\r\n          >\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n              {map(socialMediaIcons, (item, index) => (\r\n                <Link href={item.link} target=\"_blank\" key={index}>\r\n                  <Tooltip title={item.toolTip} arrow>\r\n                    <Box className=\"social_icon\">\r\n                      <Box\r\n                        component=\"img\"\r\n                        src={item.name}\r\n                        alt=\"facebook\"\r\n                        className=\"img-cover\"\r\n                      />\r\n                    </Box>\r\n                  </Tooltip>\r\n                </Link>\r\n              ))}\r\n              {isLoggedIn ? (\r\n                <Tooltip title=\"Save\" arrow>\r\n                  <Checkbox\r\n                    sx={{ \"&.MuiCheckbox-root\": { padding: \"9px 3px\" } }}\r\n                    icon={<BookmarkBorderRoundedIcon />}\r\n                    checkedIcon={<BookmarkRoundedIcon />}\r\n                    className=\"social_icon\"\r\n                    onChange={(e) =>\r\n                      props.setFieldValue(\"isSaved\", e.target.checked)\r\n                    }\r\n                    checked={props.values.isArchived}\r\n                    onClick={(e) => handleSave(e.target.checked)}\r\n                  />\r\n                </Tooltip>\r\n              ) : null}\r\n            </Stack>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeSocialIcon;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport StarRoundedIcon from \"@mui/icons-material/StarRounded\";\r\n\r\nimport { get, truncate } from \"lodash\";\r\n\r\nimport DefaultThumbnail from \"../../../../assets/images/default-health-thumb.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst RecentRecipe = (props) => {\r\n  const { item } = props;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Paper variant=\"outlined\" className=\"mt-2 cursor-pointer\">\r\n        <Box\r\n          sx={{\r\n            height: \"200px\",\r\n            width: \"100%\",\r\n            position: \"relative\",\r\n          }}\r\n          onClick={() => navigate(`/${\"recipe/\"}${item._id}`)}\r\n        >\r\n          <Box\r\n            component=\"img\"\r\n            src={get(item, \"topSection[0]imageUrl\", DefaultThumbnail)}\r\n            alt=\"article main image\"\r\n            className=\"img-cover w-100 h-100\"\r\n          />\r\n\r\n          <Stack\r\n            direction=\"row\"\r\n            alignitems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            className=\"position-absolute bottom-0 w-100 p-2\"\r\n            sx={{ backdropFilter: \"blur(5px)\", background: \"#00000078\" }}\r\n          >\r\n            <Chip\r\n              label={\r\n                get(item, \"totalProtein\", 0).toFixed(0) > 99\r\n                  ? \"..\"\r\n                  : get(item, \"totalProtein\", 0).toFixed(0)\r\n              }\r\n              className=\"fw-semibold\"\r\n              sx={{\r\n                backgroundColor: \"success.main\",\r\n                color: \"primary.contrastText\",\r\n                border: \"2px solid\",\r\n                borderColor: \"primary.contrastText\",\r\n                borderRadius: \"100%\",\r\n                width: \"35px\",\r\n                height: \"35px\",\r\n                padding: \"3px\",\r\n                outline: \"2px solid\",\r\n                outlineColor: \"success.main\",\r\n                \"& .MuiChip-label\": {\r\n                  padding: \"0px\",\r\n                },\r\n              }}\r\n            />\r\n\r\n            {get(item, \"ratingStatus\", false) ? (\r\n              <Rating\r\n                defaultValue={get(item, \"rating\", 0)}\r\n                icon={<StarRoundedIcon />}\r\n                emptyIcon={<StarRoundedIcon />}\r\n                precision={0.5}\r\n                readOnly\r\n              />\r\n            ) : null}\r\n          </Stack>\r\n\r\n          <Stack\r\n            direction=\"column\"\r\n            spacing={1}\r\n            sx={{\r\n              top: \"7%\",\r\n              zIndex: \"5\",\r\n            }}\r\n            className=\"position-absolute left-0 mb-2\"\r\n          >\r\n            <Chip\r\n              label={get(item, \"dietPreference.title\", \"\")}\r\n              color={\r\n                get(item, \"dietPreference.title\", \"\") === \"Vegan\" ||\r\n                get(item, \"dietPreference.title\", \"\") === \"Vegetarian\"\r\n                  ? \"success\"\r\n                  : \"error\"\r\n              }\r\n              sx={{\r\n                borderRadius: \"0 7px 7px 0\",\r\n                height: \"27px\",\r\n                color: \"primary.contrastText\",\r\n              }}\r\n              className=\"fw-medium text-capitalize\"\r\n            />\r\n\r\n            <Chip\r\n              label={get(item, \"cuisine.title\", \"\")}\r\n              color=\"primary\"\r\n              sx={{ borderRadius: \"0 7px 7px 0\", height: \"27px\" }}\r\n              className=\"fw-medium text-capitalize\"\r\n            />\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Box className=\"p-3\">\r\n          <Box\r\n            className=\"mb-1\"\r\n            onClick={() => navigate(`/${\"recipe/\"}${item._id}`)}\r\n          >\r\n            <Typography variant=\"h6\" color=\"text.primary\" className=\"my-1\">\r\n              {truncate(get(item, \"title\", \"\"), { length: 25 })}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {truncate(get(item, \"subTitle\", \"\"), { length: 60 })}\r\n            </Typography>\r\n          </Box>\r\n          <Box className=\"mt-3\">\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={2}\r\n              alignItems=\"center\"\r\n              justifyContent=\"end\"\r\n              className=\"mt-auto\"\r\n              onClick={() =>\r\n                item.createdBy === \"MASTER_ADMIN\"\r\n                  ? navigate(\"/appointment\")\r\n                  : navigate(`/profile/${get(item, \"consultantId._id\", \"\")}`)\r\n              }\r\n            >\r\n              <Avatar\r\n                alt={\r\n                  item.createdBy === \"MASTER_ADMIN\"\r\n                    ? get(item, \"adminId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"adminId.lastName\")\r\n                    : get(item, \"consultantId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"consultantId.lastName\", \"\")\r\n                }\r\n                src={\r\n                  item.createdBy === \"MASTER_ADMIN\"\r\n                    ? get(item, \"adminId.profilePictureURL\", \"\")\r\n                    : get(item, \"consultantId.profilePictureURL\", \"\")\r\n                }\r\n              />\r\n              <Box>\r\n                <Typography variant=\"subtitle2\" color=\"text.primary\">\r\n                  {item.createdBy === \"MASTER_ADMIN\"\r\n                    ? get(item, \"adminId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"adminId.lastName\")\r\n                    : get(item, \"consultantId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"consultantId.lastName\", \"\")}\r\n                </Typography>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  {item.createdBy === \"MASTER_ADMIN\"\r\n                    ? \"NUTRAPLUS\"\r\n                    : get(item, \"createdBy\", \"\")}\r\n                </Typography>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecentRecipe;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nimport CMTextButton from \"../../../../ui-components/buttons/CMTextButton\";\r\nimport CMDialog from \"../../../../ui-components/dialog/CMDialog\";\r\nimport useContextData from \"../../../../hooks/useContextData\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { map } from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\nimport { postRecipeReport } from \"../../../../../store/slice/recipe/RecipeSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst reportData = [\r\n  {\r\n    type: \"Hate Speech\",\r\n    detail:\r\n      \"An attack on any individual or group solely based on religion, race, gender or creed.\",\r\n    constant: \"HATE_SPEECH\",\r\n  },\r\n  {\r\n    type: \"Identity Attack\",\r\n    detail: \"Harassment, bullying, personal attacks or direct threats.\",\r\n    constant: \"IDENTITY_ATTACK\",\r\n  },\r\n  {\r\n    type: \"Inappropriate Language\",\r\n    detail: \"Excessive profanity, obscenity, vulgarity, or slurs.\",\r\n    constant: \"INAPPROPRIATE_LANGUAGE\",\r\n  },\r\n  {\r\n    type: \"Spam\",\r\n    detail: \"Advertising, phishing, scamming, bots, or repetitive posts\",\r\n    constant: \"SPAM\",\r\n  },\r\n  {\r\n    type: \"False Information\",\r\n    detail:\r\n      \"Disinformation, misinformation, conspiracy theories or additional misleading information.\",\r\n    constant: \"FALSE_INFORMATION\",\r\n  },\r\n  {\r\n    type: \"Sexual Activity\",\r\n    detail:\r\n      \"Sexually explicit, pornographic, flirtatious, or sexually aggressive\",\r\n    constant: \"SEXUAL_ACTIVITY\",\r\n  },\r\n  {\r\n    type: \"Profile\",\r\n    detail: \"Inappropriate username, avatar, bio, impersonation\",\r\n    constant: \"PROFILE\",\r\n  },\r\n  {\r\n    type: \"other\",\r\n    constant: \"OTHER\",\r\n  },\r\n];\r\n\r\nconst ReportModal = (props) => {\r\n  const { commentId } = props;\r\n  const { LanguageSelected, setLanguage } = useContextData();\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeLanguage = (value) => {\r\n    setLanguage(value);\r\n    handleClose();\r\n  };\r\n\r\n  const handlecommentReport = async (value) => {\r\n    const data = {\r\n      commentId: commentId,\r\n      reportType: value,\r\n    };\r\n\r\n    const res = await dispatch(postRecipeReport(data))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          toast.success(result.message);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CMTextButton onClick={handleClickOpen} className=\"justify-content-start\">\r\n        Report\r\n      </CMTextButton>\r\n      <CMDialog\r\n        dialogTitle=\"Submit a Report\"\r\n        dialogOpen={open}\r\n        maxWidth=\"md\"\r\n        dialogClose={handleClose}\r\n      >\r\n        <Formik\r\n          initialValues={{\r\n            selectedLanguage: LanguageSelected ?? {},\r\n            reportType: \"\",\r\n          }}\r\n          onSubmit={(values) => {\r\n            handlecommentReport(values.reportType);\r\n            handleChangeLanguage(values?.selectedLanguage);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <form onSubmit={props.handleSubmit}>\r\n              {console.log(\"props\", props)}\r\n              <DialogContent dividers>\r\n                <Grid container maxWidth=\"sm\">\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"body1\">\r\n                      Help us to better understand the problem. Please select\r\n                      from the categories below which best describes the\r\n                      situation.\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      Each report is investigated by a member of our content\r\n                      review team(learn more):\r\n                    </Typography>\r\n\r\n                    <FormControl fullWidth>\r\n                      <RadioGroup\r\n                        name=\"reportType\"\r\n                        value={props.values.reportType}\r\n                        onChange={(e, value) => {\r\n                          props.setFieldValue(\"reportType\", value);\r\n                        }}\r\n                        sx={{\r\n                          marginLeft: \"10px\",\r\n                          marginTop: \"10px\",\r\n                        }}\r\n                      >\r\n                        {map(reportData, (item, index) => (\r\n                          <FormControlLabel\r\n                            value={item.constant}\r\n                            checked={item.constant === props.values.reportType}\r\n                            control={<Radio />}\r\n                            className=\"mb-2\"\r\n                            label={\r\n                              <Box>\r\n                                <Typography variant=\"subtitle1\">\r\n                                  {item.type}\r\n                                </Typography>\r\n                                <Typography variant=\"caption\">\r\n                                  {item.detail}\r\n                                </Typography>\r\n                              </Box>\r\n                            }\r\n                            key={index}\r\n                          />\r\n                        ))}\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button type=\"submit\" variant=\"contained\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </CMDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportModal;\r\n","import React from \"react\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FlagIcon from \"@mui/icons-material/Flag\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MenuPopover from \"../../../../common/MenuPopover\";\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { deleteRecipeComment } from \"../../../../../store/slice/recipe/RecipeSlice\";\r\nimport ReportModal from \"./ReportModal\";\r\n\r\nconst RecipeCommentOptions = (props) => {\r\n  const { commentId, getRecipeCommentData, commenterId } = props;\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const recipeId = params._id;\r\n  const userId = useSelector((state) => state.auth.meInfo._id);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlecommentDelete = async () => {\r\n    const data = {\r\n      recipeId: recipeId,\r\n      commentId: commentId,\r\n    };\r\n    const res = await dispatch(deleteRecipeComment(data))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          toast.success(result.message);\r\n          getRecipeCommentData();\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <IconButton ref={anchorRef} onClick={handleOpen}>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <MenuPopover\r\n          open={open}\r\n          onClose={handleClose}\r\n          anchorEl={anchorRef.current}\r\n          sx={{ width: 150 }}\r\n        >\r\n          <MenuItem>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"gray\"\r\n              className=\"d-flex align-items-center gap-1\"\r\n            >\r\n              <FlagIcon />\r\n              <ReportModal commentId={commentId} />\r\n            </Typography>\r\n          </MenuItem>\r\n          {userId === commenterId ? (\r\n            <MenuItem onClick={() => handlecommentDelete()}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"gray\"\r\n                className=\"d-flex align-items-center gap-1\"\r\n              >\r\n                <DeleteIcon />\r\n                Delete\r\n              </Typography>\r\n            </MenuItem>\r\n          ) : null}\r\n        </MenuPopover>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeCommentOptions;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { get, isEmpty, map, size, upperCase } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport RecipeCommentOptions from \"./RecipeCommentOptions\";\r\n\r\nimport {\r\n  getRecipeCommentList,\r\n  postCommentAdd,\r\n} from \"../../../../../store/slice/recipe/RecipeSlice\";\r\nimport CMTextButton from \"../../../../ui-components/buttons/CMTextButton\";\r\nimport stringToColor from \"../../../../hooks/stringToColor\";\r\n\r\nconst RecipeComments = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const recipeId = params._id;\r\n\r\n  const [commentOpen, setCommentOpen] = useState(\"\");\r\n\r\n  const getRecipeCommentData = useCallback(() => {\r\n    const payload = {\r\n      id: recipeId,\r\n      level: 0,\r\n    };\r\n    dispatch(getRecipeCommentList(payload));\r\n  }, [dispatch, recipeId]);\r\n\r\n  useEffect(() => {\r\n    getRecipeCommentData();\r\n  }, [getRecipeCommentData]);\r\n\r\n  const recipeCommentList = useSelector(\r\n    (state) => state.recipe.commentData.comments\r\n  );\r\n  const totalComments = useSelector(\r\n    (state) => state.recipe.commentData.totalComments\r\n  );\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const handleCommentAdd = async (data) => {\r\n    const payload = {\r\n      recipeId: recipeId,\r\n      comment: get(data, \"values\", \"\"),\r\n      level: data.level,\r\n      parentId: data.parentId,\r\n      commentId: data.commentId,\r\n    };\r\n\r\n    dispatch(postCommentAdd(payload))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          toast.success(result.message);\r\n          data.resetForm({ comment: \"\", reply: \"\" });\r\n          getRecipeCommentData();\r\n        } else {\r\n          toast.error(result.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function Reply(props) {\r\n    const { commentList, formProps, addPadding, level } = props;\r\n    return (\r\n      <>\r\n        {map(commentList, (item, index) => (\r\n          <Box key={index} className={addPadding ? \"ps-5\" : \"ps-0\"}>\r\n            <Divider orientation=\"horizontal\" flexItem className=\"my-2\" />\r\n            <Box className=\"d-flex justify-content-between mb-0\">\r\n              <Stack direction=\"row\" className=\"w-100 gap-3\">\r\n                <Avatar\r\n                  sx={{\r\n                    backgroundColor: stringToColor(\r\n                      get(item, \"userData.name\", \"NA\")\r\n                    ),\r\n                    width: 40,\r\n                    height: 40,\r\n                  }}\r\n                  alt={upperCase(get(item, \"userData.name\", \"N\"))}\r\n                  src={get(item, \"userData.profilePictureURL\", \"NA\")}\r\n                />\r\n                <Box className=\"w-100\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    className=\"lh-1 text-capitalize\"\r\n                  >\r\n                    {get(item, \"userData.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"userData.lastName\", \"\")}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {moment(item.createdAt).format(\"LL\")}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" className=\"my-1\">\r\n                    {get(item, \"comment\", \"\")}\r\n                  </Typography>\r\n                  {isLoggedIn ? (\r\n                    level === 0 ? (\r\n                      <CMTextButton\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          formProps.setFieldValue(\"reply\", \"\");\r\n                          setCommentOpen(item._id);\r\n                        }}\r\n                        className=\"justify-content-start\"\r\n                      >\r\n                        Reply\r\n                      </CMTextButton>\r\n                    ) : null\r\n                  ) : null}\r\n                  <Collapse\r\n                    in={item._id === commentOpen ? true : false}\r\n                    timeout=\"auto\"\r\n                    unmountOnExit\r\n                  >\r\n                    <TextField\r\n                      key={index}\r\n                      name=\"reply\"\r\n                      value={formProps.values.reply}\r\n                      onChange={formProps.handleChange}\r\n                      onBlur={formProps.handleBlur}\r\n                      variant=\"standard\"\r\n                      rows={3}\r\n                      className=\"pb-3\"\r\n                      fullWidth={true}\r\n                      multiline={true}\r\n                      placeholder=\"Leave your reply\"\r\n                    />\r\n\r\n                    <Stack direction=\"row\" spacing={2} justifyContent=\"end\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                          handleCommentAdd({\r\n                            values: formProps.values.reply,\r\n                            commentId: item._id,\r\n                            level: item.level + 1,\r\n                            parentId: item._id,\r\n                            resetForm: formProps.resetForm,\r\n                          })\r\n                        }\r\n                        disabled={\r\n                          isEmpty(formProps.values.reply) ? true : false\r\n                        }\r\n                      >\r\n                        Reply\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => setCommentOpen(false)}\r\n                      >\r\n                        cancel\r\n                      </Button>\r\n                    </Stack>\r\n                  </Collapse>\r\n                </Box>\r\n              </Stack>\r\n              {isLoggedIn ? (\r\n                <RecipeCommentOptions\r\n                  commentId={get(item, \"_id\", \"\")}\r\n                  getRecipeCommentData={getRecipeCommentData}\r\n                  commenterId={get(item, \"userData._id\", \"\")}\r\n                />\r\n              ) : null}\r\n            </Box>\r\n            {size(item.replays) > 0 ? (\r\n              <Reply\r\n                formProps={formProps}\r\n                commentList={item.replays}\r\n                level={get(item, \"replays.level\", 1)}\r\n                addPadding={true}\r\n              />\r\n            ) : null}\r\n          </Box>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Box className=\"py-3\">\r\n        <Typography variant=\"h4\" className=\"mb-3\">\r\n          {totalComments} Comments\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            comment: \"\",\r\n            reply: \"\",\r\n          }}\r\n          onSubmit={(values) => {\r\n            console.log(\"values\", values);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <form onSubmit={props.handleSubmit}>\r\n              {isLoggedIn ? (\r\n                <Box>\r\n                  <TextField\r\n                    name=\"comment\"\r\n                    value={props.values.comment}\r\n                    onChange={props.handleChange}\r\n                    onBlur={props.handleBlur}\r\n                    rows={3}\r\n                    className=\"pb-3\"\r\n                    fullWidth={true}\r\n                    multiline={true}\r\n                    placeholder=\"Leave your comments\"\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                      handleCommentAdd({\r\n                        values: props.values.comment,\r\n                        level: 0,\r\n                        resetForm: props.resetForm,\r\n                      })\r\n                    }\r\n                    disabled={isEmpty(props.values.comment) ? true : false}\r\n                  >\r\n                    Post Comment\r\n                  </Button>\r\n                </Box>\r\n              ) : (\r\n                <Typography variant=\"subtitle1\" color=\"secondary\">\r\n                  Please Login First, If you want to comment.\r\n                </Typography>\r\n              )}\r\n              <Reply\r\n                commentList={recipeCommentList}\r\n                formProps={props}\r\n                level={0}\r\n              />\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeComments;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport StarRoundedIcon from \"@mui/icons-material/StarRounded\";\r\n\r\nimport { get, truncate } from \"lodash\";\r\n\r\nimport DefaultThumbnail from \"../../../../assets/images/default-health-thumb.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst RelatedRecipe = (props) => {\r\n  const { item } = props;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Paper variant=\"outlined\" className=\"mt-2 cursor-pointer\">\r\n        <Box\r\n          sx={{\r\n            height: \"200px\",\r\n            width: \"100%\",\r\n            position: \"relative\",\r\n          }}\r\n          onClick={() => navigate(`/${\"recipe/\"}${item._id}`)}\r\n        >\r\n          <Box\r\n            component=\"img\"\r\n            src={get(item, \"topSection[0]imageUrl\", DefaultThumbnail)}\r\n            alt=\"article main image\"\r\n            className=\"img-cover w-100 h-100\"\r\n          />\r\n\r\n          <Stack\r\n            direction=\"row\"\r\n            alignitems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            className=\"position-absolute bottom-0 w-100 p-2\"\r\n            sx={{ backdropFilter: \"blur(5px)\", background: \"#00000078\" }}\r\n          >\r\n            <Chip\r\n              label={\r\n                get(item, \"totalProtein\", 0).toFixed(0) > 99\r\n                  ? \"..\"\r\n                  : get(item, \"totalProtein\", 0).toFixed(0)\r\n              }\r\n              className=\"fw-semibold\"\r\n              sx={{\r\n                backgroundColor: \"success.main\",\r\n                color: \"primary.contrastText\",\r\n                border: \"2px solid\",\r\n                borderColor: \"primary.contrastText\",\r\n                borderRadius: \"100%\",\r\n                width: \"35px\",\r\n                height: \"35px\",\r\n                padding: \"3px\",\r\n                outline: \"2px solid\",\r\n                outlineColor: \"success.main\",\r\n                \"& .MuiChip-label\": {\r\n                  padding: \"0px\",\r\n                },\r\n              }}\r\n            />\r\n\r\n            {get(item, \"ratingStatus\", false) ? (\r\n              <Rating\r\n                defaultValue={get(item, \"rating\", 0)}\r\n                icon={<StarRoundedIcon />}\r\n                emptyIcon={<StarRoundedIcon />}\r\n                precision={0.5}\r\n                readOnly\r\n              />\r\n            ) : null}\r\n          </Stack>\r\n\r\n          <Stack\r\n            direction=\"column\"\r\n            spacing={1}\r\n            sx={{\r\n              top: \"7%\",\r\n              zIndex: \"5\",\r\n            }}\r\n            className=\"position-absolute left-0 mb-2\"\r\n          >\r\n            <Chip\r\n              label={get(item, \"dietPreference.title\", \"\")}\r\n              color={\r\n                get(item, \"dietPreference.title\", \"\") === \"Vegan\" ||\r\n                get(item, \"dietPreference.title\", \"\") === \"Vegetarian\"\r\n                  ? \"success\"\r\n                  : \"error\"\r\n              }\r\n              sx={{\r\n                borderRadius: \"0 7px 7px 0\",\r\n                height: \"27px\",\r\n                color: \"primary.contrastText\",\r\n              }}\r\n              className=\"fw-medium text-capitalize\"\r\n            />\r\n\r\n            <Chip\r\n              label={get(item, \"cuisine.title\", \"\")}\r\n              color=\"primary\"\r\n              sx={{ borderRadius: \"0 7px 7px 0\", height: \"27px\" }}\r\n              className=\"fw-medium text-capitalize\"\r\n            />\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Box className=\"p-3\">\r\n          <Box\r\n            className=\"mb-1\"\r\n            onClick={() => navigate(`/${\"recipe/\"}${item._id}`)}\r\n          >\r\n            <Typography variant=\"h6\" color=\"text.primary\" className=\"my-1\">\r\n              {truncate(get(item, \"title\", \"\"), { length: 25 })}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {truncate(get(item, \"subTitle\", \"\"), { length: 60 })}\r\n            </Typography>\r\n          </Box>\r\n          <Box className=\"mt-3\">\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={2}\r\n              alignitems=\"center\"\r\n              justifyContent=\"end\"\r\n              className=\"mt-auto\"\r\n              onClick={() =>\r\n                item.createdBy === \"MASTER_ADMIN\"\r\n                  ? navigate(\"/appointment\")\r\n                  : navigate(`/profile/${get(item, \"consultantId._id\", \"\")}`)\r\n              }\r\n            >\r\n              <Avatar\r\n                alt={\r\n                  item.createdBy === \"MASTER_ADMIN\"\r\n                    ? get(item, \"adminId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"adminId.lastName\")\r\n                    : get(item, \"consultantId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"consultantId.lastName\", \"\")\r\n                }\r\n                src={\r\n                  item.createdBy === \"MASTER_ADMIN\"\r\n                    ? get(item, \"adminId.profilePictureURL\", \"\")\r\n                    : get(item, \"consultantId.profilePictureURL\", \"\")\r\n                }\r\n              />\r\n              <Box>\r\n                <Typography variant=\"subtitle2\" color=\"text.primary\">\r\n                  {item.createdBy === \"MASTER_ADMIN\"\r\n                    ? get(item, \"adminId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"adminId.lastName\")\r\n                    : get(item, \"consultantId.firstName\", \"\") +\r\n                      \" \" +\r\n                      get(item, \"consultantId.lastName\", \"\")}\r\n                </Typography>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  {item.createdBy === \"MASTER_ADMIN\"\r\n                    ? \"NUTRAPLUS\"\r\n                    : get(item, \"createdBy\", \"\")}\r\n                </Typography>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RelatedRecipe;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\r\nimport OndemandVideoIcon from \"@mui/icons-material/OndemandVideo\";\r\nimport StarOutlineRoundedIcon from \"@mui/icons-material/StarOutlineRounded\";\r\nimport StarRoundedIcon from \"@mui/icons-material/StarRounded\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { get, isEmpty, map } from \"lodash\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Lazy, Pagination, Virtual } from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport DefaultThumbnail from \"../../../../assets/images/default-health-thumb.jpg\";\r\nimport { getHealthRecipeDetail } from \"../../../../store/slice/recipe/RecipeSlice\";\r\nimport Page from \"../../../common/Page\";\r\nimport createMarkup from \"../../../hooks/createMarkup\";\r\nimport RecipeDetailSkeleton from \"./components/RecipeDetailSkeleton\";\r\nimport RecipeLikeDislike from \"./components/RecipeLikeDislike\";\r\nimport RecipeRating from \"./components/RecipeRating\";\r\nimport RecipeSocialIcon from \"./components/RecipeSocialIcon\";\r\nimport ShortProfile from \"../../profile/short-profile/ShortProfile\";\r\nimport RecentRecipe from \"./RecentRecipe\";\r\nimport RecipeComments from \"./comment\";\r\nimport RelatedRecipe from \"./RelatedRecipe\";\r\n// import Testcomment from \"./recipe-comment/Testcomment\";\r\n\r\nconst RecipeDetailPage = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const recipeId = params._id;\r\n\r\n  useEffect(() => {\r\n    dispatch(getHealthRecipeDetail(recipeId));\r\n  }, [dispatch, recipeId]);\r\n\r\n  const recipeDetailData = useSelector(\r\n    (state) => state.recipe.healthRecipeDetail\r\n  );\r\n  const relatedRecipeList = useSelector(\r\n    (state) => state.recipe.relatedRecipeDetail\r\n  );\r\n  const recentRecipeList = useSelector(\r\n    (state) => state.recipe.recentRecipeDetail\r\n  );\r\n  const recipeDetailLoading = useSelector(\r\n    (state) => state.recipe.recipeDetailLoading\r\n  );\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const metaTagsList = [\r\n    {\r\n      keyName: \"property\",\r\n      keyValue: \"og:image\",\r\n      content: get(recipeDetailData, \"topSection[0]imageUrl\", DefaultThumbnail),\r\n    },\r\n    {\r\n      keyName: \"property\",\r\n      keyValue: \"og:title\",\r\n      content: get(recipeDetailData, \"seoTitle\", \"\"),\r\n    },\r\n    {\r\n      keyName: \"property\",\r\n      keyValue: \"og:description\",\r\n      content: get(recipeDetailData, \"description\", \"\"),\r\n    },\r\n\r\n    {\r\n      keyName: \"name\",\r\n      keyValue: \"twitter:image\",\r\n      content: get(recipeDetailData, \"topSection[0]imageUrl\", DefaultThumbnail),\r\n    },\r\n    {\r\n      keyName: \"name\",\r\n      keyValue: \"twitter:title\",\r\n      content: get(recipeDetailData, \"seoTitle\", \"\"),\r\n    },\r\n    {\r\n      keyName: \"name\",\r\n      keyValue: \"twitter:description\",\r\n      content: get(recipeDetailData, \"description\", \"\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Nutra Plus | Article Blog\"\r\n        metaTagsList={metaTagsList}\r\n        className=\"w-100\"\r\n      >\r\n        <Container maxWidth=\"lg\" className=\"mt-4\">\r\n          {recipeDetailLoading ? (\r\n            <RecipeDetailSkeleton />\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                md={8}\r\n                spacing={2}\r\n                className=\"h-fit-content\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h3\">\r\n                    {get(recipeDetailData, \"title\", \"\")}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider orientation=\"horizontal\" flexItem className=\"pt-2\" />\r\n                </Grid>\r\n\r\n                <Grid container item xs={12} spacing={2}>\r\n                  <Grid item xs={12} sm={9.5}>\r\n                    <Box className=\"position-relative\">\r\n                      <Swiper\r\n                        slidesPerView={1}\r\n                        lazy={true}\r\n                        centeredSlides={true}\r\n                        loop={true}\r\n                        autoplay={true}\r\n                        modules={[Lazy, Pagination, Virtual]}\r\n                        className=\"recipeSwiper mb-3 position-relative\"\r\n                        pagination={{ clickable: true, dynamicBullets: true }}\r\n                      >\r\n                        {map(recipeDetailData.topSection, (item, index) => (\r\n                          <Box key={index}>\r\n                            <SwiperSlide>\r\n                              <Box\r\n                                component=\"img\"\r\n                                src={get(item, \"imageUrl\", DefaultThumbnail)}\r\n                                alt=\"article main image\"\r\n                                className=\"img-fluid rounded\"\r\n                              />\r\n                            </SwiperSlide>\r\n                          </Box>\r\n                        ))}\r\n                      </Swiper>\r\n\r\n                      {!isEmpty(get(recipeDetailData, \"recipeVideoLink\", \"\")) ||\r\n                      get(recipeDetailData, \"ratingStatus\", false) ? (\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          justifyContent=\"space-between\"\r\n                          className=\"position-absolute bottom-0 w-100 p-2\"\r\n                          sx={{\r\n                            zIndex: \"5\",\r\n                            backdropFilter: \"blur(5px)\",\r\n                            background: \"#00000078\",\r\n                          }}\r\n                        >\r\n                          {get(recipeDetailData, \"recipeVideoLink\", \"\") ? (\r\n                            <OndemandVideoIcon\r\n                              sx={{ color: \"primary.contrastText\" }}\r\n                            />\r\n                          ) : null}\r\n                          {get(recipeDetailData, \"ratingStatus\", false) ? (\r\n                            <Box className=\"w-100 text-right\">\r\n                              <Rating\r\n                                defaultValue={get(\r\n                                  recipeDetailData,\r\n                                  \"rating\",\r\n                                  0\r\n                                )}\r\n                                icon={<StarRoundedIcon />}\r\n                                emptyIcon={<StarOutlineRoundedIcon />}\r\n                                precision={0.5}\r\n                                readOnly\r\n                              />\r\n                            </Box>\r\n                          ) : null}\r\n                        </Stack>\r\n                      ) : null}\r\n                      <Stack\r\n                        direction=\"column\"\r\n                        spacing={1}\r\n                        sx={{\r\n                          top: \"7%\",\r\n                          zIndex: \"5\",\r\n                        }}\r\n                        className=\"position-absolute left-0 mb-2\"\r\n                      >\r\n                        <Chip\r\n                          label={get(\r\n                            recipeDetailData,\r\n                            \"dietPreference.title\",\r\n                            \"\"\r\n                          )}\r\n                          color={\r\n                            get(\r\n                              recipeDetailData,\r\n                              \"dietPreference.title\",\r\n                              \"\"\r\n                            ) === \"Vegan\" ||\r\n                            get(\r\n                              recipeDetailData,\r\n                              \"dietPreference.title\",\r\n                              \"\"\r\n                            ) === \"Vegetarian\"\r\n                              ? \"success\"\r\n                              : \"error\"\r\n                          }\r\n                          sx={{\r\n                            borderRadius: \"0 7px 7px 0\",\r\n                            height: \"27px\",\r\n                            color: \"primary.contrastText\",\r\n                          }}\r\n                          className=\"fw-medium text-capitalize\"\r\n                        />\r\n\r\n                        <Chip\r\n                          label={get(recipeDetailData, \"cuisine.title\", \"\")}\r\n                          color=\"primary\"\r\n                          sx={{ borderRadius: \"0 7px 7px 0\", height: \"27px\" }}\r\n                          className=\"fw-medium text-capitalize\"\r\n                        />\r\n                      </Stack>\r\n                    </Box>\r\n\r\n                    <Stack\r\n                      direction={{ xs: \"column\", sm: \"row\" }}\r\n                      spacing={2}\r\n                      justifyContent=\"space-between\"\r\n                    >\r\n                      <RecipeSocialIcon />\r\n\r\n                      {get(recipeDetailData, \"likeStatus\", false) ? (\r\n                        <RecipeLikeDislike\r\n                          likeCount={get(recipeDetailData, \"likeCount\", 0)}\r\n                        />\r\n                      ) : null}\r\n                    </Stack>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={12}\r\n                    sm={2.5}\r\n                    spacing={2}\r\n                    sx={{ height: \"fit-content\" }}\r\n                  >\r\n                    <Grid item xs={6} sm={12} className=\"mb-2\">\r\n                      <Typography variant=\"body2\">Prep Time</Typography>\r\n                      <Typography variant=\"subtitle1\" color=\"text.primary\">\r\n                        {get(recipeDetailData, \"prepTime.hour\", \"\") > 0\r\n                          ? get(recipeDetailData, \"prepTime.hour\", \"\")\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"prepTime.hour\", \"\") > 0\r\n                          ? \"Hour\"\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"prepTime.min\", 0) > 0\r\n                          ? get(recipeDetailData, \"prepTime.min\", 0)\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"prepTime.min\", 0) > 0\r\n                          ? \"Min\"\r\n                          : null}{\" \"}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} sm={12} className=\"mb-2\">\r\n                      <Typography variant=\"body2\">Cook Time</Typography>\r\n\r\n                      <Typography variant=\"subtitle1\" color=\"text.primary\">\r\n                        {get(recipeDetailData, \"cookTime.hour\", \"\") > 0\r\n                          ? get(recipeDetailData, \"cookTime.hour\", \"\")\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"cookTime.hour\", \"\") > 0\r\n                          ? \"Hour\"\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"cookTime.min\", 0) > 0\r\n                          ? get(recipeDetailData, \"cookTime.min\", 0)\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"cookTime.min\", 0) > 0\r\n                          ? \"Min\"\r\n                          : null}{\" \"}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} sm={12} className=\"mb-2\">\r\n                      <Typography variant=\"body2\">Total Time</Typography>\r\n\r\n                      <Typography variant=\"subtitle1\" color=\"text.primary\">\r\n                        {get(recipeDetailData, \"totalTime.hour\", \"\") > 0\r\n                          ? get(recipeDetailData, \"totalTime.hour\", \"\")\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"totalTime.hour\", \"\") > 0\r\n                          ? \"Hour\"\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"totalTime.min\", 0) > 0\r\n                          ? get(recipeDetailData, \"totalTime.min\", 0)\r\n                          : null}{\" \"}\r\n                        {get(recipeDetailData, \"totalTime.min\", 0) > 0\r\n                          ? \"Min\"\r\n                          : null}{\" \"}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} sm={12} className=\"mb-3\">\r\n                      <Typography variant=\"body2\">\r\n                        Number of servings\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\">\r\n                        Serves {get(recipeDetailData, \"recipeServingCount\", 0)}{\" \"}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    color=\"text.primary\"\r\n                    className=\"fw-normal text-justify fst-italic\"\r\n                  >\r\n                    {`\"${get(recipeDetailData, \"subTitle\", \"\")}\"`}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider orientation=\"horizontal\" flexItem />\r\n                </Grid>\r\n\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" className=\"mb-2\">\r\n                      Ingredients\r\n                    </Typography>\r\n\r\n                    <List className=\"d-flex flex-wrap\">\r\n                      {map(recipeDetailData.ingredients, (item, index) => (\r\n                        <ListItem\r\n                          sx={{\r\n                            width: { xs: \"100%\", sm: \"50%\" },\r\n                            alignItems: \"flex-start\",\r\n                          }}\r\n                          className=\"p-0 align-items-center pb-1\"\r\n                          key={index}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <FiberManualRecordIcon sx={{ fontSize: \"10px\" }} />\r\n                          </ListItemIcon>\r\n                          <ListItemText>\r\n                            {get(item, \"volume.value\", 0)}{\" \"}\r\n                            {get(item, \"volume.unit\", \"\")}{\" \"}\r\n                            {get(item, \"description\", \"\").toLowerCase()}\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item xs={12} className=\"align-items-center\">\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" className=\"mb-3\">\r\n                      Ingredints Nutritions\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={11} sm={10} className=\"mx-auto\">\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                      spacing={{ xs: 3, sm: 8, md: 12 }}\r\n                    >\r\n                      <Box>\r\n                        <Box\r\n                          sx={{\r\n                            border: \"4px solid\",\r\n                            borderColor: \"warning.light\",\r\n                            borderRadius: \"100%\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            width: { xs: \"80px\", sm: \"100px\" },\r\n                            height: { xs: \"80px\", sm: \"100px\" },\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h3\">100</Typography>\r\n                          <Typography variant=\"body2\" className=\"fw-bold\">\r\n                            Cal\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n\r\n                      <Box className=\"text-center\">\r\n                        <Typography variant=\"subtitle1\" color=\"info.light\">\r\n                          0%\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                          {get(recipeDetailData, \"totalCarbs\", 0)}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" className=\"fw-bold\">\r\n                          Carbs\r\n                        </Typography>\r\n                      </Box>\r\n\r\n                      <Box className=\"text-center\">\r\n                        <Typography variant=\"subtitle1\" color=\"success.light\">\r\n                          0.5g\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                          {get(recipeDetailData, \"totalFat\", 0)}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" className=\"fw-bold\">\r\n                          Fat\r\n                        </Typography>\r\n                      </Box>\r\n\r\n                      <Box className=\"text-center\">\r\n                        <Typography variant=\"subtitle1\" color=\"error.light\">\r\n                          95%\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                          {\" \"}\r\n                          {get(recipeDetailData, \"totalProtein\", 0)}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" className=\"fw-bold\">\r\n                          Protein\r\n                        </Typography>\r\n                      </Box>\r\n                    </Stack>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Divider orientation=\"horizontal\" flexItem />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    sx={{ border: \"3px solid\", borderColor: \"primary.main\" }}\r\n                    className=\"p-4 rounded-5 position-relative mt-3\"\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        top: \"0%\",\r\n                        left: \"12%\",\r\n                        transform: \"translate(-50%, -50%)\",\r\n                        background: \"#fff\",\r\n                        padding: \"0 10px\",\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"h5\" className=\"my-2 text-uppercase\">\r\n                        Hot Tips\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"text.primary\"\r\n                      className=\"pt-1 fw-normal mb-2 text-justify\"\r\n                    >\r\n                      {get(recipeDetailData, \"recipeHotTip\", \"\")}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h4\" className=\"mb-2\">\r\n                    Method\r\n                  </Typography>\r\n\r\n                  <Box\r\n                    className=\"text-justify text-break\"\r\n                    dangerouslySetInnerHTML={createMarkup(\r\n                      get(recipeDetailData, \"recipeContent\", \"\")\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Box className=\"p-3\" sx={{ backgroundColor: \"grey.100\" }}>\r\n                    <Typography variant=\"h6\" className=\"mb-3\">\r\n                      {get(recipeDetailData, \"recipeVideoTitle\", \"\")}\r\n                    </Typography>\r\n\r\n                    {isEmpty(\r\n                      get(recipeDetailData, \"recipeVideoLink\", \"\")\r\n                    ) ? null : (\r\n                      <Box\r\n                        sx={{\r\n                          width: \"100%\",\r\n                          height: { xs: \"250px\", sm: \"400px\" },\r\n                        }}\r\n                      >\r\n                        <ReactPlayer\r\n                          className=\"react-player\"\r\n                          url={get(recipeDetailData, \"recipeVideoLink\", \"\")}\r\n                          width=\"100%\"\r\n                          height=\"100%\"\r\n                        />\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Divider orientation=\"horizontal\" flexItem />\r\n                </Grid>\r\n\r\n                {isLoggedIn && get(recipeDetailData, \"ratingStatus\", false) ? (\r\n                  <>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" className=\"mb-2\">\r\n                        Rating and Review\r\n                      </Typography>\r\n                      <RecipeRating />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Divider orientation=\"horizontal\" flexItem />\r\n                    </Grid>\r\n                  </>\r\n                ) : null}\r\n\r\n                <Grid item xs={12} className=\"mb-3\">\r\n                  <RecipeComments />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container item xs={12} md={4} spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Paper\r\n                    className=\"mb-3\"\r\n                    sx={{\r\n                      height: \"fit-content\",\r\n                      paddingLeft: { xs: \"0\", md: \"1rem\" },\r\n                    }}\r\n                    gap={2}\r\n                  >\r\n                    <Box className=\"mb-2\">\r\n                      <ShortProfile\r\n                        profileData={recipeDetailData}\r\n                        type=\"recipe\"\r\n                      />\r\n                    </Box>\r\n\r\n                    <Box>\r\n                      <Typography variant=\"h4\" className=\"mb-3\">\r\n                        Related Recipes\r\n                      </Typography>\r\n\r\n                      <Grid container item xs={12} spacing={2}>\r\n                        {map(relatedRecipeList, (item, index) => (\r\n                          <Grid item xs={12} sm={6} md={12} key={index}>\r\n                            <RelatedRecipe item={item} />\r\n                          </Grid>\r\n                        ))}\r\n                      </Grid>\r\n                    </Box>\r\n\r\n                    <Divider\r\n                      orientation=\"horizontal\"\r\n                      flexItem\r\n                      className=\"my-4\"\r\n                    />\r\n\r\n                    <Box>\r\n                      <Typography variant=\"h4\" className=\"mb-3\">\r\n                        Recent Recipes\r\n                      </Typography>\r\n\r\n                      <Grid container item xs={12} spacing={2}>\r\n                        {map(recentRecipeList, (item, index) => (\r\n                          <Grid item xs={12} sm={6} md={12} key={index}>\r\n                            <RecentRecipe item={item} />\r\n                          </Grid>\r\n                        ))}\r\n                      </Grid>\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Container>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeDetailPage;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.11-.9-2-2-2zm0 14H3V5h18v12zm-5-6-7 4V7z\"\n}), 'OndemandVideo');\nexports.default = _default;"],"names":["_jsx","_Fragment","children","Paper","variant","className","_jsxs","CardContent","Skeleton","animation","height","Box","Divider","orientation","flexItem","width","props","likeCount","dispatch","useDispatch","recipeId","useParams","_id","recipeUserData","useSelector","state","recipe","isLoggedIn","auth","handleLikeUpdate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","checked","formProps","data","res","wrap","_context","prev","next","like","postRecipeLike","unwrap","then","result","status","setFieldValue","toast","success","message","error","catch","console","log","sent","abrupt","stop","_x","_x2","apply","arguments","loading","Formik","initialValues","get","totalLikeCount","onSubmit","handleSubmit","Chip","color","label","FormControlLabel","sx","fontSize","control","Checkbox","disabled","onChange","e","target","values","onClick","icon","ThumbUpOffAltIcon","borderRight","paddingRight","checkedIcon","ThumbUpAltIcon","concat","useEffect","getRecipeUserData","Stack","direction","spacing","alignItems","CircularProgress","size","Typography","rating","Rating","name","value","newValue","payload","postRecipeRating","handleRating","StarRoundedIcon","emptyIcon","SentimentSatisfiedAltIcon","socialMediaIcons","link","toolTip","handleSave","isSaved","postRecipeSave","map","item","index","Link","href","Tooltip","title","arrow","component","src","alt","padding","BookmarkBorderRoundedIcon","BookmarkRoundedIcon","isArchived","navigate","useNavigate","position","DefaultThumbnail","alignitems","justifyContent","backdropFilter","background","toFixed","backgroundColor","border","borderColor","borderRadius","outline","outlineColor","defaultValue","precision","readOnly","top","zIndex","truncate","length","createdBy","Avatar","reportData","type","detail","constant","commentId","_useContextData","useContextData","LanguageSelected","setLanguage","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","handlecommentReport","reportType","postRecipeReport","CMTextButton","CMDialog","dialogTitle","dialogOpen","maxWidth","dialogClose","selectedLanguage","DialogContent","dividers","Grid","container","xs","FormControl","fullWidth","RadioGroup","marginLeft","marginTop","Radio","DialogActions","Button","getRecipeCommentData","commenterId","anchorRef","useRef","userId","meInfo","handlecommentDelete","deleteRecipeComment","IconButton","ref","MoreVertIcon","MenuPopover","onClose","anchorEl","current","MenuItem","FlagIcon","ReportModal","DeleteIcon","commentOpen","setCommentOpen","useCallback","id","level","getRecipeCommentList","recipeCommentList","commentData","comments","totalComments","handleCommentAdd","comment","parentId","postCommentAdd","resetForm","reply","Reply","commentList","addPadding","stringToColor","upperCase","moment","createdAt","format","Collapse","in","timeout","unmountOnExit","TextField","handleChange","onBlur","handleBlur","rows","multiline","placeholder","isEmpty","RecipeCommentOptions","replays","getHealthRecipeDetail","recipeDetailData","healthRecipeDetail","relatedRecipeList","relatedRecipeDetail","recentRecipeList","recentRecipeDetail","recipeDetailLoading","metaTagsList","keyName","keyValue","content","Page","Container","RecipeDetailSkeleton","md","sm","Swiper","slidesPerView","lazy","centeredSlides","loop","autoplay","modules","Lazy","Pagination","Virtual","pagination","clickable","dynamicBullets","topSection","SwiperSlide","OndemandVideoIcon","StarOutlineRoundedIcon","RecipeSocialIcon","RecipeLikeDislike","List","ingredients","ListItem","ListItemIcon","FiberManualRecordIcon","ListItemText","toLowerCase","display","flexDirection","margin","left","transform","dangerouslySetInnerHTML","createMarkup","ReactPlayer","url","RecipeRating","RecipeComments","paddingLeft","gap","ShortProfile","profileData","RelatedRecipe","RecentRecipe","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d"],"sourceRoot":""}